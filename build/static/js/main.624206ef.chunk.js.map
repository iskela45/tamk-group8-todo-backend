{"version":3,"sources":["components/SubmitButton.js","components/todo/TextInput.js","components/todo/TextInputField.js","components/list/ListItem.js","components/list/ListInput.js","components/list/ListInputField.js","components/list/SideMenu.js","components/todo/SearchField.js","components/todo/SideMenuButton.js","components/todo/ColorMenu.js","components/todo/SortMenu.js","components/todo/FilterMenu.js","components/todo/MainHeader.js","components/todo/DateMenu.js","components/todo/TodoItem.js","components/todo/Caret.js","components/todo/Subheader.js","components/todo/TodoContainer.js","components/todo/Dock.js","colors.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","getSubmitButtonStyle","flex","props","flexBtn","backgroundColor","bgColorSubmit","color","textColorSubmit","height","heightSubmit","margin","marginSubmit","border","borderRadius","borderRadiusSubmit","padding","paddingSubmit","type","value","this","text","className","style","Component","TextInput","getTextInputStyle","display","flexInput","paddingInput","marginInput","verticalAlign","borderBottom","borderRadiusInput","textColorInput","bgColorInput","heightInput","name","placeholder","title","onChange","borderbottom","borderradius","TextInputField","onSubmit","e","preventDefault","undefined","addTodo","state","currentList","setState","editTodo","finishEditing","editId","editList","target","listId","flexDirection","alignItems","width","btnText","TodoItem","getItemStyle","justifyContent","fontSize","textAlign","id","palette","fillActiveTextColor","fillTextColor","fontStyle","fontWeight","borderTop","borderRight","borderLeft","cursor","fillActiveList","fillList","getButtonStyle","background","btnStyle","zIndex","float","handleEditEvent","isEditing","submit","confirmAlert","list","message","buttons","label","onClick","deleteList","console","log","stopPropagation","primary","onMouseEnter","onMouseLeave","setList","bind","icon","faEdit","faTrashAlt","ListInput","getListInputStyle","listName","ListInputField","addList","fillInputColor","fillButton","SideMenu","getSideMenuStyle","bgSecondary","getSideMenuHeaderStyle","secondary","lineHeight","marginBottom","fillHeaderColor","getSideMenuFooterStyle","lists","map","ListItem","SearchField","getStyle","position","bottom","SideMenuButton","handleClickEvent","a","menuIsOpen","closeSideMenu","openSideMenu","FilterMenu","showMenu","closeMenu","event","document","addEventListener","dropdownMenu","contains","removeEventListener","faPalette","size","setColor","React","SortMenu","faSortAmountUpAlt","setOrderTasks","faFilter","setDeadlineFilter","MainHeader","getMainHeaderStyle","prevProps","ColorMenu","DateMenu","dateAssembler","isNaN","dateDisplay","getFullYear","deadline","getMonth","getDate","deleteDeadline","setTodoDeadlineNull","todoId","faEraser","Date","isDateEditing","marginTop","date","onDateChange","stopDateEditing","focused","onFocusChange","small","hideKeyboardShortcutsPanel","withPortal","firstDayOfWeek","marginLeft","fillClearButton","getCheckboxStyle","outline","textDecoration","todo","is_done","fillTask","whiteSpace","newDeadline","setTodoDeadline","startDateEditing","handleValueChange","tempPriority","getDialogTitle","length","substring","setPriorityDialog","min","max","defaultValue","priority","marks","1","2","3","4","5","handleStyle","sliderColor","trackStyle","activeDotStyle","setTodoPriority","getElementsByClassName","getAttribute","checked","fillEditBg","fillEditText","toggleTodo","htmlFor","faCalendarAlt","faWeightHanging","deleteTodo","Caret","getUpCaretStyle","borderWidth","borderStyle","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","top","getDownCaretStyle","up","toggleDisplay","Subheader","getH2Style","TodoContainer","getFlexContainerStyle","getWrapperStyle","wrapperId","getElementById","slice","d","get","Number","transition","overflow","subheaderId","m","Map","b","set","handleNotDonePageClick","selectedPage","selected","offset","getPaginationLimit","setOffset","setCurrentPage","notDoneCurrentPage","getTasks","handleDonePageClick","doneCurrentPage","todos","prevState","currentColor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","notDonePageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","doneTodos","donePageCount","Dock","isMobileView","colors","red","bgPrimary","blue","green","violet","dark","url","apikey","process","App","isDone","axios","getDeadlineFilter","orderTasks","getPaginationOffset","then","res","data","getTasksCount","doneTodosCount","count","todosCount","getPageCount","donePaginationLimit","notDonePaginationLimit","limit","Math","ceil","getLists","put","priorityValue","deadlineDate","_d","delete","filter","post","order","getListNameById","dlFilter","deadlineFilter","dl","el","done","donePaginationOffset","notDonePaginationOffset","newOffset","newPage","getCurrentColor","colorCode","colorCodes","key","refresh","sideMenuIsOpen","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.624206ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SubmitButton extends Component {\r\n  getSubmitButtonStyle = () => {\r\n    return {\r\n      flex: this.props.flexBtn,\r\n      backgroundColor: this.props.bgColorSubmit,\r\n      color: this.props.textColorSubmit,\r\n      height: this.props.heightSubmit,\r\n      margin: this.props.marginSubmit,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusSubmit,\r\n      padding: this.props.paddingSubmit\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        value={this.props.text}\r\n        className=\"btn\"\r\n        style={this.getSubmitButtonStyle()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TextInput extends Component {\r\n  getTextInputStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      flex: this.props.flexInput,\r\n      padding: this.props.paddingInput,\r\n      margin: this.props.marginInput,\r\n      verticalAlign: this.props.verticalAlign,\r\n      border: \"none\",\r\n      borderBottom: this.props.borderBottom,\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      height: this.props.heightInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        style={this.getTextInputStyle()}\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.title}\r\n        onChange={this.props.onChange}\r\n        borderbottom={this.props.borderBottom}\r\n        borderradius={this.props.borderRadiusInput}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nclass TextInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listId: 1,\r\n      title: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {   \r\n    e.preventDefault();\r\n    \r\n    if (this.props.addTodo !== undefined ) {\r\n      if (this.state.title === \"\") {\r\n        return\r\n      }\r\n      \r\n      this.props.addTodo(this.props.currentList, this.state.title);\r\n      this.setState({ title: \"\" });\r\n    }\r\n    \r\n    if (this.props.editTodo !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editTodo(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n\r\n    if (this.props.editList !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editList(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit} \r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", height: this.props.height, width: this.props.width }}\r\n      >\r\n        <TextInput \r\n          title={this.state.title} \r\n          onChange={this.onChange} \r\n          flexInput={this.props.flexInput}\r\n          paddingInput={this.props.paddingInput}\r\n          marginInput={this.props.marginInput}\r\n          placeholder={this.props.placeholder}\r\n          borderBottom={this.props.borderBottom}\r\n          borderRadiusInput={this.props.borderRadiusInput}\r\n          bgColorInput={this.props.bgColorInput}\r\n          textColorInput={this.props.textColorInput}\r\n          width={this.props.width}\r\n          heightInput={this.props.heightInput}\r\n          />\r\n        <SubmitButton \r\n          heightSubmit={this.props.heightSubmit}\r\n          paddingSubmit={this.props.paddingSubmit}\r\n          marginSubmit={this.props.marginSubmit}\r\n          flexBtn={this.props.flexBtn}\r\n          text={this.props.btnText} \r\n          borderRadiusSubmit={this.props.borderRadiusSubmit}\r\n          bgColorSubmit={this.props.bgColorSubmit}\r\n          textColorSubmit={this.props.textColorSubmit}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInputField;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport '../react-confirm-alert.css'; // Import css\r\nimport TextInputField from '../todo/TextInputField'\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      isEditing: false\r\n    };\r\n  }\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      padding: \"8px 20px\",\r\n      fontSize: \"1em\",\r\n      margin: \"1% 1% 1% 0\",\r\n      textAlign: \"left\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      fontStyle: this.props.currentList === this.props.id ? \"italic\" : \"normal\",\r\n      fontWeight: \"600\",\r\n      borderRadius: \"0 15px 15px 0\",\r\n      borderTop: \"1px solid rgba(0, 0, 0, 0.3)\",\r\n      borderRight: \"1px solid rgba(0, 0, 0, 0.3)\",\r\n      borderBottom: \"1px solid rgba(0, 0, 0, 0.3)\",\r\n      borderLeft: \"none\",\r\n      width: \"90%\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: this.props.currentList === this.props.id ? this.props.palette.fillActiveList : this.props.palette.fillList\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      width: \"5%\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"2px\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      display: this.state.btnStyle.display,\r\n      zIndex: \"1\",\r\n      float: \"right\",\r\n    };\r\n  };\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  submit = (e, id) => {\r\n    confirmAlert({\r\n      title: `Are you sure you want to delete list ${this.props.list.name}?`,\r\n      message: \"This action cannot be undone.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => this.props.deleteList(id)\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => console.log(\"Delete alert rejected.\")\r\n        }\r\n      ]\r\n    });\r\n    // Stops onClick event from bubbling to parent event's onClick event\r\n    e.stopPropagation()\r\n  };\r\n\r\n  render() {\r\n    const { id, name } = this.props.list;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal list item\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        onClick={this.props.setList.bind(this, id)}\r\n        style={this.getItemStyle()}\r\n      >\r\n        {name}\r\n        <span style={{\r\n            display: \"flex\", \r\n            flexDirection: \"row\", \r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => this.handleEditEvent()}\r\n            style={this.getButtonStyle()}\r\n            >\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </button>\r\n          <button\r\n            onClick={e => this.submit(e, id)}\r\n            style={this.getButtonStyle()}\r\n          >\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </button>\r\n        </span>\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        btnText=\"Edit\" \r\n        editList={this.props.editList}\r\n        bgColorSubmit={this.props.palette.primary}\r\n        textColorSubmit={this.props.palette.fillActiveTextColor}\r\n        placeholder={name}\r\n        editId={id}\r\n        finishEditing={this.finishEditing}\r\n        flexInput=\"10\"\r\n        flexBtn=\"1\"\r\n        height=\"39px\"\r\n        width=\"90%\"\r\n        heightInput=\"39px\"\r\n        heightSubmit=\"39px\"\r\n        paddingInput=\"8px 20px\"\r\n        paddingSubmit=\"8px 20px\"\r\n        marginInput=\"1% 0 1% 0\"\r\n        marginSubmit=\"1% 0 1% 0\"\r\n        borderBottom=\"1px solid #999\"\r\n        borderRadiusInput= \"0\"\r\n        borderRadiusSubmit= \"0 16px 16px 0\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListInput extends Component {\r\n  getListInputStyle = () => {\r\n    return {\r\n      padding: \"10px\",\r\n      margin: this.props.marginInput,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      flex: this.props.flexInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"listName\"\r\n        style={this.getListInputStyle()}\r\n        placeholder=\"Create a list\"\r\n        value={this.props.listName}\r\n        onChange={this.props.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport ListInput from \"./ListInput\";\r\n\r\nclass ListInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listName: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.listName === \"\") {\r\n      return;\r\n    }\r\n\r\n    this.props.addList(this.state.listName);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit} \r\n        style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"row\", \r\n          height: \"65px\", \r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          margin: \"0 auto\"\r\n        }}\r\n      >\r\n        <ListInput \r\n          title={this.state.listName} \r\n          onChange={this.onChange}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          flexInput=\"4.5\" \r\n          paddingInput=\"10px\"\r\n          marginInput=\"15px 0 15px 20px\" \r\n          borderRadiusInput=\"12px 0 0 12px\" \r\n        />\r\n        <SubmitButton \r\n          text=\"Add\" \r\n          flexBtn=\"1\" \r\n          bgColorSubmit={this.props.palette.fillButton}\r\n          textColorSubmit={this.props.palette.fillTextColor}\r\n          paddingSubmit=\"10px\"\r\n          marginSubmit=\"15px 20px 15px 0\" \r\n          borderRadiusSubmit=\"0 12px 12px 0\" \r\n      />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInputField;\r\n","import React, { Component } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListInputField from \"./ListInputField\";\r\n\r\nclass SideMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lists: [],\r\n    };\r\n  }\r\n\r\n  getSideMenuStyle = () => {\r\n    return {\r\n      width: \"0px\",\r\n      flex: \"auto 0 auto\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: this.props.palette.bgSecondary, \r\n      height: \"100vh\",\r\n    };\r\n  };\r\n\r\n  getSideMenuHeaderStyle = () => {\r\n    return {\r\n      textAlign: \"left\",\r\n      padding: \"15px 20px\",\r\n      backgroundColor: this.props.palette.secondary,\r\n      lineHeight: \"43px\",\r\n      height: \"72px\",\r\n      flex: \"1\",\r\n      marginBottom: \"15px\",\r\n      color: this.props.palette.fillHeaderColor\r\n    };\r\n  };\r\n\r\n  getSideMenuFooterStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      backgroundColor: this.props.palette.secondary,\r\n      lineHeight: \"35px\",\r\n      height: \"65px\",\r\n      flex: \"0 1 auto\",\r\n      justifyContent: \"center\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sideMenu\" style={this.getSideMenuStyle()}>\r\n        <h1 style={this.getSideMenuHeaderStyle()}>Lists</h1>\r\n\r\n        <div style={{flex: \"21\"}}>\r\n          {this.props.lists.map((list) => {\r\n            return (\r\n              <ListItem\r\n                id={list.id}\r\n                key={list.id}\r\n                list={list}\r\n                deleteList={this.props.deleteList}\r\n                setList={this.props.setList}\r\n                editList={this.props.editList}\r\n                currentList={this.props.currentList}\r\n                palette={this.props.palette}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={this.getSideMenuFooterStyle()}>\r\n          <ListInputField addList={this.props.addList} palette={this.props.palette} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { Component } from \"react\";\r\nimport TextInputField from \"./TextInputField\";\r\n\r\nclass SearchField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: \"1\",\r\n      display: \"inline-block\", \r\n      lineHeight: \"36px\",\r\n      position: \"relative\",\r\n      bottom: \"12px\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <TextInputField\r\n          title={this.state.title} \r\n          placeholder=\"Search task\"\r\n          paddingInput=\"10px\"\r\n          paddingSubmit=\"10px\"\r\n          marginInput=\"15px 0 15px 20px\"\r\n          marginSubmit=\"15px 16px 15px 0\"\r\n          flexInput=\"3\"\r\n          flexBtn=\"1\"\r\n          btnText=\"Find\"\r\n          borderBottom=\"none\"\r\n          borderRadiusInput=\"12px 0 0 12px\"\r\n          borderRadiusSubmit=\"0 12px 12px 0\"\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          bgColorSubmit={this.props.palette.fillButton}\r\n          textColorSubmit={this.props.palette.fillTextColor}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SideMenuButton extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      menuIsOpen: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: this.props.flex,\r\n      display: \"inline-block\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"32px\"\r\n    };\r\n  };\r\n\r\n  handleClickEvent = async () => {\r\n    this.state.menuIsOpen\r\n    ? this.props.closeSideMenu()\r\n    : this.props.openSideMenu()\r\n    await this.setState({ menuIsOpen: !this.state.menuIsOpen })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        style={this.getStyle()}\r\n        onClick={ this.handleClickEvent }\r\n      >\r\n        &#9776;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideMenuButton;\r\n","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown colorMenu\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faPalette} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 0 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#cc5252\",\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              margin: \"4px\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n            />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 1 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#2554C7\",\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              margin: \"4px\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 2 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#278427\",\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              margin: \"4px\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 3 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#6e2ac7\",\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              margin: \"4px\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 4 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#333\",\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              margin: \"4px\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortAmountUpAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faSortAmountUpAlt} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+created\")}>Created ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-created\")}>Created descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+edited\")}>Edited ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-edited\")}>Edited descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+priority\")}>Priority ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-priority\")}>Priority descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+deadline\")}>Deadline ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-deadline\")}>Deadline descending</button>\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default SortMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n      <button className=\"dropbtn\"><FontAwesomeIcon icon={faFilter} size=\"2x\" /></button>\r\n      <div className=\"dropdown-content\">\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"\")}>Show all</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"notNull\")}>Show tasks with deadlines</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"null\")}>Show tasks without deadlines</button>\r\n      </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React, { Component } from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport SideMenuButton from \"./SideMenuButton\";\r\nimport ColorMenu from \"./ColorMenu\";\r\nimport SortMenu from \"./SortMenu\";\r\nimport FilterMenu from \"./FilterMenu\";\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.name !== this.props.name) {\r\n      this.setState({ name: this.props.name })\r\n    }\r\n  }\r\n\r\n  getMainHeaderStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      flex: this.props.flex,\r\n      height: \"72px\",\r\n      lineHeight: \"36px\",\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"15px 20px\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header style={this.getMainHeaderStyle()}>\r\n        <SideMenuButton \r\n          flex=\"1\"\r\n          openSideMenu={this.props.openSideMenu}\r\n          closeSideMenu={this.props.closeSideMenu}\r\n        />\r\n        <h1 style={{flex: \"3\", textAlign: \"center\"}}>{this.state.name}</h1>\r\n        <div \r\n          className=\"widget-container\" \r\n          style={{display: \"flex\", flexDirection: \"row\", flex: \"1\"}}\r\n        >\r\n          <SearchField palette={this.props.palette} />\r\n          <ColorMenu setColor={this.props.setColor} currentList={this.props.currentList} palette={this.props.palette} />\r\n          <SortMenu setOrderTasks={this.props.setOrderTasks} />\r\n          <FilterMenu setDeadlineFilter={this.props.setDeadlineFilter} />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { Component } from \"react\";\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEraser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass DateMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateDisplay: new Date(this.props.deadline)\r\n    };\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) { \r\n    if (this.props.deadline !== prevProps.deadline) {\r\n      this.setState({ dateDisplay: new Date(this.props.deadline) })\r\n    }\r\n  }\r\n\r\n  dateAssembler = () => {\r\n    if (!isNaN(this.state.dateDisplay.getFullYear()) && this.props.deadline !== null) {\r\n      return `${this.state.dateDisplay.getFullYear()}-${this.state.dateDisplay.getMonth() + 1}-${this.state.dateDisplay.getDate()}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  deleteDeadline = () => {\r\n    if (this.props.deadline !== \"0000-00-00\" && this.props.deadline !== null) {\r\n      return <button\r\n          onClick={this.props.setTodoDeadlineNull.bind(this, this.props.todoId)}\r\n          style={this.props.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.props.isDateEditing ?\r\n        <div style={{marginTop: \"8px\"}}>\r\n          {this.dateAssembler()}\r\n          {this.deleteDeadline()}\r\n        </div>\r\n      : // Else\r\n        <div style={{marginTop: \"8px\", display: \"flex\", alignItems: \"center\"}}>\r\n          <SingleDatePicker\r\n            date={this.state.date} // momentPropTypes.momentObj or null\r\n            onDateChange={date => this.props.stopDateEditing(date)} // PropTypes.func.isRequired\r\n            focused={this.state.focused} // PropTypes.bool\r\n            onFocusChange={({ focused }) => this.setState({ focused })} // PropTypes.func.isRequired\r\n            id={`date-picker-${this.props.todoId}`} // PropTypes.string.isRequired\r\n            small={true}\r\n            hideKeyboardShortcutsPanel={true}\r\n            withPortal={true}\r\n            firstDayOfWeek={1}\r\n          />\r\n          <span \r\n            onClick={e => this.props.stopDateEditing()} \r\n            style={{padding: \"7px\", border: \"none\", marginLeft: \"4px\", color: this.props.palette.fillClearButton, cursor: \"pointer\", fontSize: \"24px\", position: \"relative\", bottom: \"4px\"}}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateMenu;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faEraser, \r\n  faEdit, \r\n  faCalendarAlt, \r\n  faWeightHanging \r\n  } from '@fortawesome/free-solid-svg-icons'\r\nimport DateMenu from \"./DateMenu\"\r\nimport TextInputField from \"./TextInputField\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport '../react-confirm-alert.css';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      checked: false,\r\n      isEditing: false,\r\n      isDateEditing: false,\r\n      tempPriority: 3,\r\n      sliderColor: this.props.palette.primary,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.palette.primary !== prevProps.palette.primary) {\r\n      this.setState({ sliderColor: this.props.palette.primary })\r\n    }\r\n  }\r\n\r\n  getCheckboxStyle = () => {\r\n    return {\r\n      width: \"1.3em\",\r\n      height: \"1.3em\",\r\n      borderRadius: \"50%\",\r\n      verticalAlign: \"-0.3em\",  \r\n      outline: \"none\",\r\n      cursor: \"pointer\",\r\n    };\r\n  };\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      padding: \"15px 20px\",\r\n      marginBottom: \"8px\",\r\n      textAlign: \"left\",\r\n      color: this.props.palette.fillTextColor,\r\n      fontWeight: \"600\",\r\n      textDecoration: this.props.todo.is_done ? \"line-through\" : \"none\",\r\n      backgroundColor: this.props.palette.fillTask,\r\n      whiteSpace: \"pre-wrap\",\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"2px\",\r\n      color: this.props.palette.fillTextColor,\r\n      verticalAlign: \"0.05rem\",\r\n      display: this.state.btnStyle.display,\r\n    };\r\n  };\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  stopDateEditing = (newDeadline) => {\r\n    this.setState({ isDateEditing: false})\r\n    \r\n    if (newDeadline !== undefined) {\r\n      this.props.setTodoDeadline(this.props.todo.id, newDeadline)\r\n    }\r\n  }\r\n\r\n  startDateEditing = () => {\r\n    this.setState({ isDateEditing: true })\r\n  }\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  handleValueChange = async tempPriority => {\r\n    await this.setState({ tempPriority })\r\n  }\r\n\r\n  // Stop title from overflowing the confirmAlert for the priority slider.\r\n  getDialogTitle = title => {\r\n    if (title.length > 20) {\r\n      title = title.substring(0, 18) + \"...\";\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  // Create a confirmation alert with the message being replaced by rc-slider.\r\n  // Set button sets the new todo priority by reading from the elements due to\r\n  // react-confirm-alert and rc-slider having issues with each other.\r\n  setPriorityDialog = () => {\r\n    confirmAlert({\r\n      title: `Give \"${this.getDialogTitle(this.props.todo.title)}\" a priority.`,\r\n      // Yes, this gives a console error because the message isn't a string\r\n      // No, we can't fix it.\r\n      message: <Slider \r\n                  min={1} \r\n                  max={5} \r\n                  defaultValue={this.props.todo.priority} \r\n                  marks={{ 1: \"Low\", 2: \"\", 3: \"Medium\", 4: \"\", 5: \"High\" }}\r\n                  onChange={this.handleValueChange}\r\n                  handleStyle={{border: `solid 2px ${this.state.sliderColor}`}}\r\n                  trackStyle={{backgroundColor: this.state.sliderColor}}\r\n                  activeDotStyle={{border: `solid 2px ${this.state.sliderColor}`}}\r\n                />,\r\n      buttons: [\r\n        {\r\n          label: \"Set\",\r\n          onClick: () => this.props.setTodoPriority(\r\n            this.props.todo.id, \r\n            // confirmAlert won't play nice with rc-slider \r\n            // so we have to use this abomination.\r\n            document.getElementsByClassName(\"rc-slider-handle\")[0].getAttribute(\"aria-valuenow\"))\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          onClick: () => console.log(\"Priority change canceled.\")\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal to do task\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        style={this.getItemStyle()}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={this.props.toggleTodo.bind(this, id, !this.props.checked)}\r\n          style={this.getCheckboxStyle()}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor=\"checkbox\"></label> {title}{\" \"}\r\n        <button\r\n          onClick={() => this.handleEditEvent()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.startDateEditing()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faCalendarAlt} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.setPriorityDialog()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faWeightHanging} />\r\n        </button>\r\n        <button\r\n          onClick={this.props.deleteTodo.bind(this, id, this.props.checked)}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n        <DateMenu \r\n          palette={this.props.palette}\r\n          stopDateEditing={this.stopDateEditing}\r\n          todoId={id}\r\n          deadline={this.props.todo.deadline}\r\n          isDateEditing={this.state.isDateEditing}\r\n          getButtonStyle={this.getButtonStyle}\r\n          setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n        />\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        editId={id}\r\n        placeholder={title}\r\n        editTodo={this.props.editTodo}\r\n        finishEditing={this.finishEditing}\r\n        btnText=\"Edit\" \r\n        bgColorSubmit={this.props.palette.fillEditBg}\r\n        textColorSubmit={this.props.palette.fillEditText}\r\n        height=\"65px\"\r\n        paddingInput=\"10px\"\r\n        paddingSubmit=\"10px\"\r\n        marginInput=\"15px 20px\"\r\n        marginSubmit=\"15px 0\"\r\n        borderBottom=\"1px solid #999\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Caret extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      up: false,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.up !== prevProps.up) {\r\n      this.setState({ up: this.props.up });\r\n    }\r\n  }\r\n\r\n  getUpCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"8px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: \"transparent\",\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: this.props.palette.fillHeaderColor,\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"4px\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n\r\n  getDownCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"8px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: this.props.palette.fillHeaderColor,\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: \"transparent\",\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"12px\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <span \r\n        onClick={this.props.toggleDisplay.bind(this, this.props.id)}\r\n        style={this.state.up ? this.getUpCaretStyle() : this.getDownCaretStyle()}\r\n      >\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Caret;\r\n","import React, { Component } from \"react\";\r\nimport Caret from \"./Caret\";\r\n\r\n\r\nclass Subheader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  getH2Style = () => {\r\n    return {\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"15px 20px 15px 20px\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <h2 style={this.getH2Style()}>\r\n        {this.state.name}\r\n        <Caret \r\n          id={this.props.id}\r\n          toggleDisplay={this.props.toggleDisplay}  \r\n          up={this.props.up}\r\n          palette={this.props.palette}\r\n        />\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subheader;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport Subheader from \"./Subheader\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n// Each css file is identical apart from color settings and .colorSet elements.\r\n// When colorSet className gets updated the file of that value takes over.\r\nimport \"./css/pagination0.css\";\r\nimport \"./css/pagination1.css\";\r\nimport \"./css/pagination2.css\";\r\nimport \"./css/pagination3.css\";\r\nimport \"./css/pagination4.css\";\r\n\r\nclass TodoContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const map = new Map();\r\n    map.set(1, [\"92%\", false])\r\n    map.set(2, [\"92%\", false])\r\n\r\n    this.state = {\r\n      todos: [],\r\n      display: map,\r\n      notDoneCurrentPage: 0,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.display !== prevState.display) {\r\n      this.getWrapperStyle(\"wrapper-1\")\r\n      this.getWrapperStyle(\"wrapper-2\")\r\n    }\r\n\r\n    // If list is changed reset pagination.\r\n    if (this.props.currentList !== prevProps.currentList) {\r\n      this.setState({ notDoneCurrentPage: 0 })\r\n      this.setState({ doneCurrentPage: 0 })\r\n      this.props.setOffset(true, 0)\r\n      this.props.setOffset(false, 0)\r\n      this.props.setCurrentPage(true, this.state.doneCurrentPage)\r\n      this.props.setCurrentPage(false, this.state.notDoneCurrentPage)\r\n    }\r\n  }\r\n\r\n  getFlexContainerStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-evenly\",\r\n      flex: this.props.flex,\r\n    }\r\n  }\r\n\r\n  getWrapperStyle = (wrapperId) => {    \r\n    const e = document.getElementById(wrapperId);\r\n    const id = wrapperId.slice(-1, wrapperId.length); \r\n    const d = this.state.display.get(Number(id))[0];\r\n    e.style.height = d;\r\n    e.style.transition = \"height 1s\"\r\n    e.style.overflow = \"hidden\"\r\n  }\r\n\r\n  toggleDisplay = (subheaderId) => {\r\n    const m = new Map(this.state.display)\r\n    const id = subheaderId.slice(-1, subheaderId.length);\r\n    // d === displayed height which is either 0px or 92% of parent container\r\n    const d = m.get(Number(id))[0];\r\n    // b === boolean value for caret: up (true) or down (false)\r\n    const b = m.get(Number(id))[1];\r\n    \r\n    m.set(Number(id), d === \"92%\" && b === false ? [0, !b] : [\"92%\", !b]);\r\n\r\n    this.setState({ display: m })\r\n  }\r\n\r\n  // take selected page and calculate offset based on pagination limit and page number.\r\n  // Then update current page and reload tasks.\r\n  handleNotDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(false);\r\n\r\n    this.props.setOffset(false, offset);\r\n    this.props.setCurrentPage(false, selectedPage);\r\n    this.setState({\r\n        notDoneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(false)\r\n    });\r\n\r\n  };\r\n\r\n  handleDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(true);\r\n\r\n    this.props.setOffset(true, offset);\r\n    this.props.setCurrentPage(true, selectedPage)\r\n    this.setState({\r\n        doneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(true)\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getFlexContainerStyle()}>\r\n        <div style={{ width: \"50%\", padding: \"24px\", margin: \"24px\" }}>\r\n          <Subheader  \r\n            id={\"sub-1\"}\r\n            name=\"To Do\"\r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(1)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-1\">\r\n            {this.props.todos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id} \r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.props.notDonePageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handleNotDonePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n              forcePage={this.state.notDoneCurrentPage}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"50%\", padding: \"24px\", margin: \"24px\" }}>\r\n          <Subheader  \r\n            id=\"sub-2\"\r\n            name=\"Done\" \r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(2)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-2\">\r\n            {this.props.doneTodos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.props.donePageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handleDonePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n              forcePage={this.state.doneCurrentPage}\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoContainer;\r\n","import React, { Component } from \"react\";\r\nimport ButtonContainer from \"../ButtonContainer\";\r\nimport TextInputField from \"./TextInputField\";\r\n\r\nclass Dock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMobileView: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      backgroundColor: this.props.palette.primary,\r\n      lineHeight: \"35px\",\r\n      flex: this.props.flex\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        {this.state.isMobileView ? (\r\n          <ButtonContainer />\r\n        ) : (\r\n          <TextInputField \r\n            addTodo={this.props.addTodo} \r\n            currentList={this.props.currentList}\r\n            btnText=\"Add\"\r\n            paddingInput=\"10px\"\r\n            paddingSubmit=\"10px\"\r\n            marginInput=\"15px 0 15px 20px\"\r\n            marginSubmit=\"15px 20px 15px 0\"\r\n            bgColorSubmit={this.props.palette.fillButton}\r\n            textColorSubmit={this.props.palette.fillTextColor}\r\n            bgColorInput={this.props.palette.fillInputColor}\r\n            textColorInput={this.props.palette.fillTextColor}\r\n            placeholder=\"Any homework to do?\"\r\n            borderRadiusInput=\"12px 0 0 12px\"\r\n            borderRadiusSubmit=\"0 12px 12px 0\"\r\n            borderBottom=\"none\"\r\n            flexInput=\"10\"\r\n            flexBtn=\"1\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dock;\r\n","var colors = {\r\n  // RED: default\r\n  red: {\r\n    primary: \"#cc5252\",\r\n    secondary: \"#962029\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#cc5252\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#cc5252\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#cc5252\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // BLUE\r\n  blue: {\r\n    primary: \"#2554C7\",\r\n    secondary: \"#193a8b\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#2554C7\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#2554C7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#2554C7\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // GREEN\r\n  green: {\r\n    primary: \"#278427\",\r\n    secondary: \"#1a581a\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#278427\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#278427\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#278427\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // VIOLET\r\n  violet: {\r\n    primary: \"#6e2ac7\",\r\n    secondary: \"#461B7E\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#6e2ac7\", \r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#6e2ac7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // DARK\r\n  dark: {\r\n    primary: \"#333\",\r\n    secondary: \"#3a3a3a\",\r\n    bgPrimary: \"#1E1E1E\",\r\n    bgSecondary: \"#232323\",\r\n    fillList: \"#1e2021\",\r\n    fillActiveList: \"#444\",\r\n    fillTask: \"#444\",\r\n    fillEditBg: \"#444\",\r\n    fillEditText: \"whitesmoke\",\r\n    fillButton: \"#444\",\r\n    fillClearButton: \"whitesmoke\",\r\n    fillHeaderColor: \"whitesmoke\",\r\n    fillTextColor: \"whitesmoke\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"#1e2021\"\r\n  },\r\n}\r\n\r\nexport default colors;","import React, { Component } from \"react\";\r\nimport SideMenu from \"./components/list/SideMenu\";\r\nimport MainHeader from \"./components/todo/MainHeader\";\r\nimport TodoContainer from \"./components/todo/TodoContainer\";\r\nimport Dock from \"./components/todo/Dock\";\r\nimport axios from \"axios\";\r\nimport colors from \"./colors\";\r\n\r\nconst url = \"https://tamk-4a00ez62-3001-group08.herokuapp.com/api/\";\r\nconst apikey = process.env.REACT_APP_BACKEND_APIKEY;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      deadlineFilter: '',\r\n      orderTasks: '+created',\r\n      currentList: 1,\r\n      currentColor: 0,\r\n      todos: [],\r\n      todosCount: 1,\r\n      doneTodos: [],\r\n      doneTodosCount: 1,\r\n      lists: [],\r\n      refresh: false,\r\n      sideMenuIsOpen: false,\r\n      notDonePaginationLimit: 11,\r\n      notDonePaginationOffset: 0,\r\n      notDonePageCount: 1,\r\n      notDoneCurrentPage: 0,\r\n      donePaginationLimit: 11,\r\n      donePaginationOffset: 0,\r\n      donePageCount: 1,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTasks(true);\r\n    this.getTasks(false);\r\n    this.getLists();\r\n    this.getTasksCount(true);\r\n    this.getTasksCount(false);\r\n    this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n    this.getPageCount(true, this.state.notDonePaginationLimit, this.state.todosCount)\r\n  }\r\n\r\n  /**\r\n   * call backend with APIKey and any required filters and sorters included. \r\n   * Pagination included at the end of the string.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for getting finished and unfinished tasks.\r\n   */\r\n  getTasks = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&sort=${this.state.orderTasks}&limit=${this.getPaginationLimit(isDone)}&offset=${this.getPaginationOffset(isDone)}`)\r\n    .then((res) => isDone ? this.setState({ doneTodos: res.data }) : this.setState({ todos: res.data }))\r\n    .then(this.getTasksCount(isDone));\r\n  }\r\n\r\n  /**\r\n   * Get a count of tasks for pagination from backend to save on the amount of data\r\n   * that has to be downloaded.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for counting finished and unfinished tasks.\r\n   */\r\n  getTasksCount = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&count=true`)\r\n    .then((res) => isDone ? this.setState({ doneTodosCount: res.data[0].count }) : this.setState({ todosCount: res.data[0].count }))\r\n    .then(() => {\r\n      if (isDone) {\r\n        this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n      } else {\r\n        this.getPageCount(false, this.state.notDonePaginationLimit, this.state.todosCount)\r\n      }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Calculate the amount of pages by dividing the amount of tasks\r\n   * with the limit per page and rounding up.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used with finished and unfinished tasks.\r\n   * @param {int} limit the amount of tasks that can be loaded at the same time.\r\n   * @param {int} count The amount of todos.\r\n   */\r\n  getPageCount = (isDone, limit, count)  => {\r\n    if (isDone) {\r\n      this.setState({ donePageCount: Math.ceil(count / limit) })\r\n    } else {\r\n      this.setState({ notDonePageCount: Math.ceil(count / limit) })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get every list from the backend, apikey included.\r\n   */\r\n  getLists = () => {\r\n    axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n      this.setState({ lists: res.data });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * update database boolean value of given id to the given value.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {boolean} checked the new value of the todo.\r\n   */\r\n  toggleTodo = (id, checked) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        is_done: checked,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * update priority value of given id to priorityValue.\r\n   * The number is treated to be anywhere between 1 and 5.\r\n   * 5 means highest priority while 1 means the lowest.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {int} priorityValue the new priority value being assigned.\r\n   */\r\n  setTodoPriority = (id, priorityValue) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        priority: priorityValue,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n    \r\n  /**\r\n   * This method is used for updating list names.\r\n   * \r\n   * @param {int} id  id of the list being modified.\r\n   * @param {string} name the new value of the list name being assigned.\r\n   */\r\n  editList = (id, name) => {\r\n    axios\r\n      .put(`${url}lists/${id}?apikey=${apikey}`, { name })\r\n      .then(() => this.getLists());\r\n  };\r\n\r\n  /**\r\n   * This method is used for updating task texts.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {string} title the new value of the task text being assigned.\r\n   */\r\n  editTodo = (id, title) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, { title })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline date of the task.\r\n   * Only the year, month and day are saved following the ISO 8601 standard.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {date} deadlineDate the value of the deadline date being assigned.\r\n   */\r\n  setTodoDeadline = (id, deadlineDate) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `${deadlineDate._d.getFullYear()}-${deadlineDate._d.getMonth() + 1}-${deadlineDate._d.getDate()}`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline as null.\r\n   * In the database this appears as \"0000-00-00\".\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   */\r\n  setTodoDeadlineNull = (id) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `NULL`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method deletes the task of given Id from local- and serverside data.\r\n   * \r\n   * @param {int} id id of the task being deleted.\r\n   * @param {*} checked used to determine where to delete the local data.\r\n   */\r\n  deleteTodo = (id, checked) => {\r\n    axios.delete(`${url}tasks/${id}?apikey=${apikey}`).then(() => {\r\n      checked ?\r\n      this.setState({\r\n        doneTodos: [...this.state.doneTodos.filter((todo) => todo.id !== id)],\r\n      })\r\n      : this.setState({\r\n        todos: [...this.state.todos.filter((todo) => todo.id !== id)],\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * delete the list of given id from local- and serverside data.\r\n   * \r\n   * @param {int} id id of the list being deleted.\r\n   */\r\n  deleteList = (id) => {\r\n    axios.delete(`${url}lists/${id}?apikey=${apikey}`).then(() => {\r\n      this.setState({\r\n        lists: [...this.state.lists.filter((list) => list.id !== id)],\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * add a new task and include list Id for the database to use as a foreign key\r\n   * and the text content of the task, rest of the data is assigned as defaults.\r\n   * \r\n   * @param {int} listId id of the list the list the task will be included in.\r\n   * @param {string} title the text content of the new task.\r\n   */\r\n  addTodo = (listId, title) => {\r\n    axios\r\n      .post(`${url}tasks/?apikey=${apikey}`, {\r\n        listId,\r\n        title,\r\n      })\r\n      .then(() => this.getTasks(false));\r\n  };\r\n\r\n  /**\r\n   * Create a new list, only name is required since everything else is assigned\r\n   * to its default values.\r\n   * \r\n   * @param {string} name The name of the new list.\r\n   */\r\n  addList = (name) => {\r\n    axios\r\n      .post(`${url}lists/?apikey=${apikey}`, {\r\n        name,\r\n      })\r\n      .then(() => {\r\n        axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n          this.setState({ lists: res.data });\r\n          this.setList(res.data[res.data.length-1].id)\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Update currentList value and load new tasks with the value as a filter.\r\n   * \r\n   * @param {int} listId id of the list that'll be used in the getTasks filters.\r\n   */\r\n  setList = async (listId) => {\r\n    await this.setState({ currentList: listId });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * assign sorter(s) and refresh current tasks with the new sorter.\r\n   * \r\n   * @param {string} order includes sorting values separated by a \",\" symbol.\r\n   */\r\n  setOrderTasks = async (order) => {\r\n    await this.setState({ orderTasks: order });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * Iterate through current array of lists and find where Id matches currentList.\r\n   * Then return the name of that list to be used in the MainHeader.js\r\n   */\r\n  getListNameById = () => {\r\n    for (const list of this.state.lists) {\r\n      if (list['id'] === this.state.currentList) {\r\n        return list['name']\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set deadline filter to be used with getTasks()\r\n   * Then refresh the tasks to apply the filter.\r\n   * \r\n   * Only used in FilterMenu.js and chooses between showing all tasks or\r\n   * only those either with or without a deadline date.\r\n   * \r\n   * @param {string} dlFilter is sent either empty, \"null\" or \"notNull\" String.\r\n   */\r\n  setDeadlineFilter = async (dlFilter) => {\r\n    await this.setState({ deadlineFilter: dlFilter });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * used to either add the deadline filter to getTasks\r\n   * or if the deadlineFilter String is empty return an empty string\r\n   * as to not mess with the rest of the get request.\r\n   */\r\n  getDeadlineFilter = () => {\r\n    let dl = `&deadline=${this.state.deadlineFilter}`;\r\n    if (dl === '&deadline=') {\r\n      dl = '';\r\n    }\r\n    return dl;\r\n  };\r\n\r\n  // Used for animated opening and closing of the list menu.\r\n  openSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"20%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  closeSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"0%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  /** \r\n   * Getters and setters for client-side pagination variables.\r\n   * @param {boolean} done is used on each to switch between finished and unfinished tasks.\r\n   */\r\n  getPaginationLimit = done => {\r\n    if (done) {\r\n      return this.state.donePaginationLimit;\r\n    } else {\r\n      return this.state.notDonePaginationLimit;\r\n    }\r\n  }\r\n\r\n  getPaginationOffset = done => {\r\n    if (done) {\r\n      return this.state.donePaginationOffset;\r\n    } else {\r\n      return this.state.notDonePaginationOffset;\r\n    }\r\n  }\r\n\r\n  setOffset = (done, newOffset) => {\r\n    if (done) {\r\n      this.setState({ donePaginationOffset: newOffset })\r\n    } else {\r\n      this.setState({ notDonePaginationOffset: newOffset })\r\n    }\r\n  }\r\n\r\n  setCurrentPage = (done, newPage) => {\r\n    if (done) {\r\n      this.setState({ doneCurrentPage: newPage })\r\n    } else {\r\n      this.setState({ notDoneCurrentPage: newPage })\r\n    }\r\n  }\r\n\r\n  // Color getters and setters.\r\n  setColor = async (id, color) => {\r\n    await axios.put(`${url}lists/${id}?apikey=${apikey}`, { color })\r\n    await this.getLists()\r\n    await this.setState({ currentColor: color })\r\n  }\r\n\r\n  getCurrentColor = () => {\r\n    const colorCode = this.state.currentColor\r\n    const colorCodes = {red: 0, blue: 1, green: 2, violet: 3, dark: 4}\r\n\r\n    for (const key in colorCodes) {\r\n      if (colorCodes[key] === colorCode) return key;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const color = this.getCurrentColor();\r\n    const palette = colors[color];\r\n    document.body.style.backgroundColor = palette.bgPrimary;\r\n\r\n    return (\r\n      <div className=\"app-container\" style={{\r\n          display: \"flex\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        {/* Includes lists and the input for adding new lists. */}\r\n        <SideMenu\r\n          lists={this.state.lists}\r\n          deleteList={this.deleteList}\r\n          setList={this.setList}\r\n          addList={this.addList}\r\n          editList={this.editList}\r\n          currentList={this.state.currentList}\r\n          palette={palette}\r\n          \r\n        />\r\n        <div className={\"main-container\"} style={{\r\n            flex: \"1 1 auto\",\r\n            backgroundColor: palette.bgPrimary,\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          {/* Includes the title and dropdown menus for customization.*/}\r\n          <MainHeader \r\n            name={this.getListNameById()}\r\n            setOrderTasks={this.setOrderTasks}\r\n            setDeadlineFilter={this.setDeadlineFilter}\r\n            flex=\"1\"\r\n            openSideMenu={this.openSideMenu}\r\n            closeSideMenu={this.closeSideMenu}\r\n            setColor={this.setColor}\r\n            currentList={this.state.currentList}\r\n            palette={palette}\r\n          />\r\n\r\n          {/* Includes tasks, all of their associated buttons \r\n              as well as pagination, subheaders and \r\n              carets for collapsing the content. */}\r\n          <TodoContainer\r\n            todos={this.state.todos}\r\n            doneTodos={this.state.doneTodos}\r\n            toggleTodo={this.toggleTodo}\r\n            setTodoPriority={this.setTodoPriority}\r\n            setTodoDeadline={this.setTodoDeadline}\r\n            editTodo={this.editTodo}\r\n            deleteTodo={this.deleteTodo}\r\n            setTodoDeadlineNull={this.setTodoDeadlineNull}\r\n            flex=\"21\"\r\n            palette={palette}\r\n            todosCount={this.state.todosCount}\r\n            doneTodosCount={this.state.doneTodosCount}\r\n            getPaginationOffset={this.getPaginationOffset}\r\n            getPaginationLimit={this.getPaginationLimit}\r\n            setOffset={this.setOffset}\r\n            getTasks={this.getTasks}\r\n            notDonePageCount={this.state.notDonePageCount}\r\n            donePageCount={this.state.donePageCount}\r\n            setCurrentPage={this.setCurrentPage}\r\n            notDoneCurrentPage={this.state.notDoneCurrentPage}\r\n            doneCurrentPage={this.state.doneCurrentPage}\r\n            currentList={this.state.currentList}\r\n            currentColor={this.state.currentColor}\r\n          />\r\n          {/* Include inputs for creating new tasks.*/}\r\n          <Dock \r\n            addTodo={this.addTodo} \r\n            currentList={this.state.currentList}\r\n            flex=\"1\"\r\n            palette={palette}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}