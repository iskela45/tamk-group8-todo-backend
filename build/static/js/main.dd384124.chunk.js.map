{"version":3,"sources":["components/SubmitButton.js","components/todo/TextInput.js","components/todo/TextInputField.js","components/list/ListItem.js","components/list/ListInput.js","components/list/ListInputField.js","components/list/SideMenu.js","components/todo/SearchField.js","components/todo/SideMenuButton.js","components/todo/ColorMenu.js","components/todo/SortMenu.js","components/todo/FilterMenu.js","components/todo/MainHeader.js","components/todo/DateMenu.js","components/todo/TodoItem.js","components/todo/Caret.js","components/todo/Subheader.js","components/todo/TodoContainer.js","components/todo/Dock.js","colors.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","getSubmitButtonStyle","flex","props","flexBtn","backgroundColor","bgColorSubmit","color","textColorSubmit","height","heightSubmit","margin","marginSubmit","border","borderRadius","borderRadiusSubmit","padding","paddingSubmit","type","value","this","text","className","style","Component","TextInput","getTextInputStyle","display","flexInput","paddingInput","marginInput","verticalAlign","borderBottom","borderRadiusInput","textColorInput","bgColorInput","heightInput","name","placeholder","title","onChange","borderbottom","borderradius","TextInputField","onSubmit","e","preventDefault","undefined","addTodo","state","currentList","setState","editTodo","finishEditing","editId","editList","target","listId","flexDirection","alignItems","width","btnText","TodoItem","getItemStyle","justifyContent","fontSize","textAlign","id","palette","fillActiveTextColor","fillTextColor","fontStyle","fontWeight","borderTop","borderRight","borderLeft","cursor","fillActiveList","fillList","getButtonStyle","background","btnStyle","zIndex","float","handleEditEvent","isEditing","getDialogTitle","length","substring","submit","confirmAlert","list","message","buttons","label","onClick","deleteList","console","log","stopPropagation","primary","onMouseEnter","onMouseLeave","setList","bind","textOverflow","overflow","icon","faEdit","faTrashAlt","ListInput","getListInputStyle","listName","ListInputField","addList","fillInputColor","fillButton","SideMenu","getSideMenuStyle","bgSecondary","getSideMenuHeaderStyle","secondary","fillHeaderColor","getSideMenuFooterStyle","lineHeight","lists","marginTop","minHeight","flexGrow","overflowY","map","ListItem","SearchField","getStyle","SideMenuButton","handleClickEvent","a","menuIsOpen","closeSideMenu","openSideMenu","FilterMenu","showMenu","closeMenu","event","document","addEventListener","dropdownMenu","contains","removeEventListener","faPalette","size","setColor","React","SortMenu","faSortAmountUpAlt","setOrderTasks","faFilter","setDeadlineFilter","MainHeader","getMainHeaderStyle","prevProps","ColorMenu","DateMenu","dateAssembler","isNaN","dateDisplay","getFullYear","deadline","year","month","toLocaleString","day","getDate","faClock","dateTime","deleteDeadline","setTodoDeadlineNull","todoId","faEraser","Date","isDateEditing","date","onDateChange","stopDateEditing","focused","onFocusChange","small","hideKeyboardShortcutsPanel","withPortal","firstDayOfWeek","marginLeft","fillClearButton","position","bottom","marginBottom","fillTask","whiteSpace","newDeadline","setTodoDeadline","todo","startDateEditing","handleValueChange","tempPriority","setPriorityDialog","min","max","defaultValue","priority","marks","1","2","3","4","5","handleStyle","sliderColor","trackStyle","activeDotStyle","setTodoPriority","getElementsByClassName","getAttribute","checked","fillEditBg","fillEditText","toggleTodo","for","primaryBg","borderWidth","borderStyle","borderColor","textDecoration","is_done","textDecorationSkip","overflowWrap","import","Checkbox","from","faCalendarAlt","faWeightHanging","deleteTodo","Caret","getUpCaretStyle","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","top","getDownCaretStyle","up","toggleDisplay","Subheader","getH2Style","TodoContainer","ifEmptyPage","notDoneCurrentPage","notDonePageCount","offset","getPaginationLimit","setOffset","setCurrentPage","doneCurrentPage","donePageCount","getFlexContainerStyle","getWrapperStyle","wrapperId","getElementById","slice","d","get","Number","subheaderId","m","Map","b","set","handleNotDonePageClick","selectedPage","selected","getTasks","handleDonePageClick","todos","prevState","donePaginationOffset","getPaginationOffset","notDonePaginationOffset","transition","currentColor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","doneTodos","Dock","isMobileView","colors","red","bgPrimary","blue","green","violet","dark","url","apikey","process","App","isDone","axios","getDeadlineFilter","orderTasks","then","res","data","getTasksCount","getListColor","doneTodosCount","count","todosCount","getPageCount","donePaginationLimit","notDonePaginationLimit","limit","Math","ceil","getLists","put","priorityValue","deadlineDate","_d","getMonth","delete","filter","post","order","getListNameById","dlFilter","deadlineFilter","dl","el","done","newOffset","newPage","getCurrentColor","colorCode","colorCodes","key","refresh","sideMenuIsOpen","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd384124.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SubmitButton extends Component {\r\n  getSubmitButtonStyle = () => {\r\n    return {\r\n      flex: this.props.flexBtn,\r\n      backgroundColor: this.props.bgColorSubmit,\r\n      color: this.props.textColorSubmit,\r\n      height: this.props.heightSubmit,\r\n      margin: this.props.marginSubmit,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusSubmit,\r\n      padding: this.props.paddingSubmit\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        value={this.props.text}\r\n        className=\"btn\"\r\n        style={this.getSubmitButtonStyle()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TextInput extends Component {\r\n  getTextInputStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      flex: this.props.flexInput,\r\n      padding: this.props.paddingInput,\r\n      margin: this.props.marginInput,\r\n      verticalAlign: this.props.verticalAlign,\r\n      border: \"none\",\r\n      borderBottom: this.props.borderBottom,\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      height: this.props.heightInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        style={this.getTextInputStyle()}\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.title}\r\n        onChange={this.props.onChange}\r\n        borderbottom={this.props.borderBottom}\r\n        borderradius={this.props.borderRadiusInput}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nclass TextInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listId: 1,\r\n      title: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {   \r\n    e.preventDefault();\r\n    \r\n    if (this.props.addTodo !== undefined ) {\r\n      if (this.state.title === \"\") {\r\n        return\r\n      }\r\n      \r\n      this.props.addTodo(this.props.currentList, this.state.title);\r\n      this.setState({ title: \"\" });\r\n    }\r\n    \r\n    if (this.props.editTodo !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editTodo(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n\r\n    if (this.props.editList !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editList(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit} \r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", height: this.props.height, width: this.props.width }}\r\n      >\r\n        <TextInput \r\n          title={this.state.title} \r\n          onChange={this.onChange} \r\n          flexInput={this.props.flexInput}\r\n          paddingInput={this.props.paddingInput}\r\n          marginInput={this.props.marginInput}\r\n          placeholder={this.props.placeholder}\r\n          borderBottom={this.props.borderBottom}\r\n          borderRadiusInput={this.props.borderRadiusInput}\r\n          bgColorInput={this.props.bgColorInput}\r\n          textColorInput={this.props.textColorInput}\r\n          width={this.props.width}\r\n          heightInput={this.props.heightInput}\r\n          />\r\n        <SubmitButton \r\n          heightSubmit={this.props.heightSubmit}\r\n          paddingSubmit={this.props.paddingSubmit}\r\n          marginSubmit={this.props.marginSubmit}\r\n          flexBtn={this.props.flexBtn}\r\n          text={this.props.btnText} \r\n          borderRadiusSubmit={this.props.borderRadiusSubmit}\r\n          bgColorSubmit={this.props.bgColorSubmit}\r\n          textColorSubmit={this.props.textColorSubmit}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInputField;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport '../react-confirm-alert.css'; // Import css\r\nimport TextInputField from '../todo/TextInputField'\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      isEditing: false\r\n    };\r\n  }\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem 1.25rem\",\r\n      fontSize: \"1em\",\r\n      margin: \"1% 1% 1% 0\",\r\n      textAlign: \"left\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      fontStyle: this.props.currentList === this.props.id ? \"italic\" : \"normal\",\r\n      fontWeight: \"600\",\r\n      borderRadius: \"0 0.9375rem 0.9375rem 0\",\r\n      borderTop: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderRight: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderBottom: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderLeft: \"none\",\r\n      width: \"90%\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: this.props.currentList === this.props.id ? this.props.palette.fillActiveList : this.props.palette.fillList\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      width: \"5%\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0.125rem\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      display: this.state.btnStyle.display,\r\n      zIndex: \"1\",\r\n      float: \"right\",\r\n    };\r\n  };\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  // Stop title from overflowing the confirmAlert for the priority slider.\r\n  getDialogTitle = title => {\r\n    if (title.length > 20) {\r\n      title = title.substring(0, 18) + \"...\";\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  submit = (e, id) => {\r\n    confirmAlert({\r\n      title: `Are you sure you want to delete list ${this.getDialogTitle(this.props.list.name)}?`,\r\n      message: \"This action cannot be undone.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => this.props.deleteList(id)\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => console.log(\"Delete alert rejected.\")\r\n        }\r\n      ]\r\n    });\r\n    // Stops onClick event from bubbling to parent event's onClick event\r\n    e.stopPropagation()\r\n  };\r\n\r\n  render() {\r\n    const { id, name } = this.props.list;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal list item\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        onClick={this.props.setList.bind(this, id)}\r\n        style={this.getItemStyle()}\r\n      >\r\n        <div style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>{name}</div>\r\n        <span style={{\r\n            display: \"flex\", \r\n            flexDirection: \"row\", \r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => this.handleEditEvent()}\r\n            style={this.getButtonStyle()}\r\n            >\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </button>\r\n          <button\r\n            onClick={e => this.submit(e, id)}\r\n            style={this.getButtonStyle()}\r\n          >\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </button>\r\n        </span>\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        btnText=\"Edit\" \r\n        editList={this.props.editList}\r\n        bgColorSubmit={this.props.palette.primary}\r\n        textColorSubmit={this.props.palette.fillActiveTextColor}\r\n        placeholder={name}\r\n        editId={id}\r\n        finishEditing={this.finishEditing}\r\n        flexInput=\"10\"\r\n        flexBtn=\"1\"\r\n        height=\"2.4375rem\"\r\n        width=\"90%\"\r\n        heightInput=\"2.4375rem\"\r\n        heightSubmit=\"2.4375rem\"\r\n        paddingInput=\"0.5rem 1.25rem\"\r\n        paddingSubmit=\"0.5rem 1.25rem\"\r\n        marginInput=\"1% 0 1% 0\"\r\n        marginSubmit=\"1% 0 1% 0\"\r\n        borderBottom=\"0.0625rem solid #999\"\r\n        borderRadiusInput= \"0\"\r\n        borderRadiusSubmit= \"0 1rem 1rem 0\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListInput extends Component {\r\n  getListInputStyle = () => {\r\n    return {\r\n      padding: \"0.625rem\",\r\n      margin: this.props.marginInput,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      flex: this.props.flexInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"listName\"\r\n        style={this.getListInputStyle()}\r\n        placeholder=\"Create a list\"\r\n        value={this.props.listName}\r\n        onChange={this.props.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport ListInput from \"./ListInput\";\r\n\r\nclass ListInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listName: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.listName === \"\") {\r\n      return;\r\n    }\r\n\r\n    this.props.addList(this.state.listName);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit} \r\n        style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"row\", \r\n          height: \"4.0625rem\", \r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          margin: \"0 auto\"\r\n        }}\r\n      >\r\n        <ListInput \r\n          title={this.state.listName} \r\n          onChange={this.onChange}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          flexInput=\"4.5\" \r\n          paddingInput=\"0.625rem\"\r\n          marginInput=\"0.9375rem 0 0.9375rem 1.25rem\" \r\n          borderRadiusInput=\"0.75rem 0 0 0.75rem\" \r\n        />\r\n        <SubmitButton \r\n          text=\"Add\" \r\n          flexBtn=\"1\" \r\n          bgColorSubmit={this.props.palette.fillButton}\r\n          textColorSubmit={this.props.palette.fillTextColor}\r\n          paddingSubmit=\"0.625rem\"\r\n          marginSubmit=\"0.9375rem 1.25rem 0.9375rem 0\" \r\n          borderRadiusSubmit=\"0 0.75rem 0.75rem 0\" \r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInputField;\r\n","import React, { Component } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListInputField from \"./ListInputField\";\r\n\r\nclass SideMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lists: [],\r\n    };\r\n  }\r\n\r\n  getSideMenuStyle = () => {\r\n    return {\r\n      width: \"0rem\",\r\n      height: \"100%\",\r\n      flex: \"initial\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: this.props.palette.bgSecondary, \r\n    };\r\n  };\r\n\r\n  getSideMenuHeaderStyle = () => {\r\n    return {\r\n      textAlign: \"left\",\r\n      padding: \"0.9375rem 1.25rem\",\r\n      backgroundColor: this.props.palette.secondary,\r\n      height: \"4.5rem\",\r\n      color: this.props.palette.fillHeaderColor\r\n    };\r\n  };\r\n\r\n  getSideMenuFooterStyle = () => {\r\n    return {\r\n      backgroundColor: this.props.palette.secondary,\r\n      lineHeight: \"2.1875rem\",\r\n      height: \"4.0625rem\",\r\n      width: \"100%\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sideMenu\" style={this.getSideMenuStyle()}>\r\n        <h1 style={this.getSideMenuHeaderStyle()}>Lists</h1>\r\n\r\n        <div style={{ marginTop: \"0.9375rem\", minHeight: 0, flexGrow: \"1\", overflowY: \"auto\"}}>\r\n          {this.props.lists.map((list) => {\r\n            return (\r\n              <ListItem\r\n                id={list.id}\r\n                key={list.id}\r\n                list={list}\r\n                deleteList={this.props.deleteList}\r\n                setList={this.props.setList}\r\n                editList={this.props.editList}\r\n                currentList={this.props.currentList}\r\n                palette={this.props.palette}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={this.getSideMenuFooterStyle()}>\r\n          <ListInputField addList={this.props.addList} palette={this.props.palette} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { Component } from \"react\";\r\nimport TextInputField from \"./TextInputField\";\r\n\r\nclass SearchField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: \"1\",\r\n      display: \"inline-block\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <TextInputField\r\n          title={this.state.title} \r\n          placeholder=\"Search task\"\r\n          paddingInput=\"0.625rem\"\r\n          paddingSubmit=\"0.625rem\"\r\n          marginInput=\"0.9375rem 0 0.9375rem 1.25rem\"\r\n          marginSubmit=\"0.9375rem 1rem 0.9375rem 0\"\r\n          flexInput=\"3\"\r\n          flexBtn=\"1\"\r\n          btnText=\"Find\"\r\n          borderBottom=\"none\"\r\n          borderRadiusInput=\"0.75rem 0 0 0.75rem\"\r\n          borderRadiusSubmit=\"0 0.75rem 0.75rem 0\"\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          bgColorSubmit={this.props.palette.fillButton}\r\n          textColorSubmit={this.props.palette.fillTextColor}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SideMenuButton extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      menuIsOpen: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: this.props.flex,\r\n      display: \"inline-block\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"2rem\"\r\n    };\r\n  };\r\n\r\n  handleClickEvent = async () => {\r\n    this.state.menuIsOpen\r\n    ? this.props.closeSideMenu()\r\n    : this.props.openSideMenu()\r\n    await this.setState({ menuIsOpen: !this.state.menuIsOpen })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        style={this.getStyle()}\r\n        onClick={ this.handleClickEvent }\r\n      >\r\n        &#9776;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideMenuButton;\r\n","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown colorMenu\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faPalette} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 0 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#cc5252\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n            />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 1 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#2554C7\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 2 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#278427\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 3 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#6e2ac7\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 4 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#333\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortAmountUpAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faSortAmountUpAlt} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+created\")}>Created ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-created\")}>Created descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+edited\")}>Edited ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-edited\")}>Edited descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+priority\")}>Priority ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-priority\")}>Priority descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+deadline\")}>Deadline ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-deadline\")}>Deadline descending</button>\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default SortMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n      <button className=\"dropbtn\"><FontAwesomeIcon icon={faFilter} size=\"2x\" /></button>\r\n      <div className=\"dropdown-content\">\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"\")}>Show all</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"notNull\")}>Show tasks with deadlines</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"null\")}>Show tasks without deadlines</button>\r\n      </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React, { Component } from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport SideMenuButton from \"./SideMenuButton\";\r\nimport ColorMenu from \"./ColorMenu\";\r\nimport SortMenu from \"./SortMenu\";\r\nimport FilterMenu from \"./FilterMenu\";\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.name !== this.props.name) {\r\n      this.setState({ name: this.props.name })\r\n    }\r\n  }\r\n\r\n  getMainHeaderStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      flex: this.props.flex,\r\n      height: \"4.5rem\",\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"0.9375rem 1.25rem\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header style={this.getMainHeaderStyle()}>\r\n        <SideMenuButton \r\n          flex=\"1\"\r\n          openSideMenu={this.props.openSideMenu}\r\n          closeSideMenu={this.props.closeSideMenu}\r\n        />\r\n        <h1 style={{flex: \"3\", textAlign: \"center\", \r\n                    textOverflow: \"ellipsis\", overflow: \"hidden\"}}>\r\n          {this.state.name}\r\n        </h1>\r\n        <div \r\n          className=\"widget-container\" \r\n          style={{display: \"flex\", flexDirection: \"row\", flex: \"1\", alignItems: \"center\"}}\r\n        >\r\n          <SearchField palette={this.props.palette} />\r\n          <ColorMenu setColor={this.props.setColor} currentList={this.props.currentList} palette={this.props.palette} />\r\n          <SortMenu setOrderTasks={this.props.setOrderTasks} />\r\n          <FilterMenu setDeadlineFilter={this.props.setDeadlineFilter} />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { Component } from \"react\";\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEraser, faClock } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass DateMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateDisplay: new Date(this.props.deadline)\r\n    };\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) { \r\n    if (this.props.deadline !== prevProps.deadline) {\r\n      this.setState({ dateDisplay: new Date(this.props.deadline) })\r\n    }\r\n  }\r\n\r\n  dateAssembler = () => {\r\n    if (!isNaN(this.state.dateDisplay.getFullYear()) && this.props.deadline !== null) {\r\n      const year = this.state.dateDisplay.getFullYear()\r\n      const month = this.state.dateDisplay.toLocaleString('default', { month: 'short' });\r\n      const day = this.state.dateDisplay.getDate()\r\n\r\n      return (\r\n        <span style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"auto\"}}>\r\n          <FontAwesomeIcon icon={faClock} style={{ color: this.props.palette.primary}} />&nbsp;\r\n          <time dateTime={this.state.dateDisplay} style={{ fontStyle: \"italic\"}}>\r\n            {month}&nbsp;{day}, {year}\r\n          </time>&nbsp;\r\n          {this.deleteDeadline()}\r\n        </span>\r\n      )\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  deleteDeadline = () => {\r\n    if (this.props.deadline !== \"0000-00-00\" && this.props.deadline !== null) {\r\n      return <button\r\n          onClick={this.props.setTodoDeadlineNull.bind(this, this.props.todoId)}\r\n          style={this.props.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.props.isDateEditing ?\r\n        <div style={{marginTop: \"0.5rem\"}}>\r\n          {this.dateAssembler()}\r\n\r\n        </div>\r\n      : // Else\r\n        <div style={{marginTop: \"0.5rem\", display: \"flex\", alignItems: \"center\"}}>\r\n          <SingleDatePicker\r\n            date={this.state.date} // momentPropTypes.momentObj or null\r\n            onDateChange={date => this.props.stopDateEditing(date)} // PropTypes.func.isRequired\r\n            focused={this.state.focused} // PropTypes.bool\r\n            onFocusChange={({ focused }) => this.setState({ focused })} // PropTypes.func.isRequired\r\n            id={`date-picker-${this.props.todoId}`} // PropTypes.string.isRequired\r\n            small={true}\r\n            hideKeyboardShortcutsPanel={true}\r\n            withPortal={true}\r\n            firstDayOfWeek={1}\r\n          />\r\n          <span \r\n            onClick={e => this.props.stopDateEditing()} \r\n            style={{padding: \"0.4375rem\", border: \"none\", marginLeft: \"0.25rem\", color: this.props.palette.fillClearButton, cursor: \"pointer\", fontSize: \"1.5rem\", position: \"relative\", bottom: \"0.25rem\"}}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateMenu;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faEraser, \r\n  faEdit, \r\n  faCalendarAlt, \r\n  faWeightHanging \r\n  } from '@fortawesome/free-solid-svg-icons'\r\nimport DateMenu from \"./DateMenu\"\r\nimport TextInputField from \"./TextInputField\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport '../react-confirm-alert.css';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      checked: false,\r\n      isEditing: false,\r\n      isDateEditing: false,\r\n      tempPriority: 3,\r\n      sliderColor: this.props.palette.primary,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.palette.primary !== prevProps.palette.primary) {\r\n      this.setState({ sliderColor: this.props.palette.primary })\r\n    }\r\n  }\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      padding: \"0.9375rem 1.25rem\",\r\n      marginBottom: \"0.5rem\",\r\n      textAlign: \"left\",\r\n      color: this.props.palette.fillTextColor,\r\n      fontWeight: \"600\",\r\n      backgroundColor: this.props.palette.fillTask,\r\n      whiteSpace: \"pre-wrap\",\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0.125rem\",\r\n      color: this.props.palette.fillTextColor,\r\n      verticalAlign: \"0.05rem\",\r\n      display: this.state.btnStyle.display,\r\n    };\r\n  };\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  stopDateEditing = (newDeadline) => {\r\n    this.setState({ isDateEditing: false})\r\n    \r\n    if (newDeadline !== undefined) {\r\n      this.props.setTodoDeadline(this.props.todo.id, newDeadline)\r\n    }\r\n  }\r\n\r\n  startDateEditing = () => {\r\n    this.setState({ isDateEditing: true })\r\n  }\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  handleValueChange = async tempPriority => {\r\n    await this.setState({ tempPriority })\r\n  }\r\n\r\n  // Stop title from overflowing the confirmAlert for the priority slider.\r\n  getDialogTitle = title => {\r\n    if (title.length > 20) {\r\n      title = title.substring(0, 18) + \"...\";\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  // Create a confirmation alert with the message being replaced by rc-slider.\r\n  // Set button sets the new todo priority by reading from the elements due to\r\n  // react-confirm-alert and rc-slider having issues with each other.\r\n  setPriorityDialog = () => {\r\n    confirmAlert({\r\n      title: `Give \"${this.getDialogTitle(this.props.todo.title)}\" a priority.`,\r\n      // Yes, this gives a console error because the message isn't a string\r\n      // No, we can't fix it.\r\n      message: <Slider \r\n                  min={1} \r\n                  max={5} \r\n                  defaultValue={this.props.todo.priority} \r\n                  marks={{ 1: \"Low\", 2: \"\", 3: \"Medium\", 4: \"\", 5: \"High\" }}\r\n                  onChange={this.handleValueChange}\r\n                  handleStyle={{border: `solid 0.125rem ${this.state.sliderColor}`}}\r\n                  trackStyle={{backgroundColor: this.state.sliderColor}}\r\n                  activeDotStyle={{border: `solid 0.125rem ${this.state.sliderColor}`}}\r\n                />,\r\n      buttons: [\r\n        {\r\n          label: \"Set\",\r\n          onClick: () => this.props.setTodoPriority(\r\n            this.props.todo.id, \r\n            // confirmAlert won't play nice with rc-slider \r\n            // so we have to use this abomination.\r\n            document.getElementsByClassName(\"rc-slider-handle\")[0].getAttribute(\"aria-valuenow\"))\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          onClick: () => console.log(\"Priority change canceled.\")\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal to do task\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        style={this.getItemStyle()}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`checkbox-${id}`}\r\n          className=\"css-checkbox\"\r\n          onChange={this.props.toggleTodo.bind(this, id, !this.props.checked)}\r\n          checked={this.props.checked}\r\n        />\r\n        <label \r\n          for={`checkbox-${id}`} \r\n          style={\r\n            this.props.checked\r\n            ? { backgroundColor: this.props.palette.primary, border: \"none\", padding: \"0.5625rem\" }\r\n            : { backgroundColor: this.props.palette.primaryBg, borderWidth: \"0.125rem\", borderStyle: \"solid\", borderColor: this.props.palette.primary, padding: \"0.4375rem\" }\r\n          } \r\n        />\r\n        {\" \"}\r\n        <span \r\n          style={{ \r\n            textDecoration: this.props.todo.is_done ? \"line-through\" : \"none\",\r\n            textDecorationSkip: \"spaces\",\r\n            overflowWrap: \"break-word\"\r\n          }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {\" \"}\r\n        <button\r\n          onClick={() => this.handleEditEvent()}\r\n          style={this.getButtonStyle()}import Checkbox from \r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.startDateEditing()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faCalendarAlt} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.setPriorityDialog()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faWeightHanging} />\r\n        </button>\r\n        <button\r\n          onClick={this.props.deleteTodo.bind(this, id, this.props.checked)}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n        <DateMenu \r\n          palette={this.props.palette}\r\n          stopDateEditing={this.stopDateEditing}\r\n          todoId={id}\r\n          deadline={this.props.todo.deadline}\r\n          isDateEditing={this.state.isDateEditing}\r\n          getButtonStyle={this.getButtonStyle}\r\n          setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n        />\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        editId={id}\r\n        placeholder={title}\r\n        editTodo={this.props.editTodo}\r\n        finishEditing={this.finishEditing}\r\n        btnText=\"Edit\" \r\n        bgColorSubmit={this.props.palette.fillEditBg}\r\n        textColorSubmit={this.props.palette.fillEditText}\r\n        height=\"4.0625rem\"\r\n        paddingInput=\"0.625rem\"\r\n        paddingSubmit=\"0.625rem\"\r\n        marginInput=\"0.9375rem 1.25rem\"\r\n        marginSubmit=\"0.9375rem 0\"\r\n        borderBottom=\"0.0625rem solid #999\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Caret extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      up: false,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.up !== prevProps.up) {\r\n      this.setState({ up: this.props.up });\r\n    }\r\n  }\r\n\r\n  getUpCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"0.5rem\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: \"transparent\",\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: this.props.palette.fillHeaderColor,\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"0.25rem\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n\r\n  getDownCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"0.5rem\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: this.props.palette.fillHeaderColor,\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: \"transparent\",\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"0.75rem\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <span \r\n        onClick={this.props.toggleDisplay.bind(this, this.props.id)}\r\n        style={this.state.up ? this.getUpCaretStyle() : this.getDownCaretStyle()}\r\n      >\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Caret;\r\n","import React, { Component } from \"react\";\r\nimport Caret from \"./Caret\";\r\n\r\n\r\nclass Subheader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  getH2Style = () => {\r\n    return {\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"0.9375rem 1.25rem 0.9375rem 1.25rem\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <h2 style={this.getH2Style()}>\r\n        {this.state.name}\r\n        <Caret \r\n          id={this.props.id}\r\n          toggleDisplay={this.props.toggleDisplay}  \r\n          up={this.props.up}\r\n          palette={this.props.palette}\r\n        />\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subheader;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport Subheader from \"./Subheader\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n// Each css file is identical apart from color settings and .colorSet elements.\r\n// When colorSet className gets updated the file of that value takes over.\r\nimport \"./css/pagination0.css\";\r\nimport \"./css/pagination1.css\";\r\nimport \"./css/pagination2.css\";\r\nimport \"./css/pagination3.css\";\r\nimport \"./css/pagination4.css\";\r\n\r\nclass TodoContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const map = new Map();\r\n    map.set(1, [\"100%\", false])\r\n    map.set(2, [\"100%\", false])\r\n\r\n    this.state = {\r\n      todos: [],\r\n      display: map,\r\n      notDoneCurrentPage: 0,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.display !== prevState.display) {\r\n      this.getWrapperStyle(\"wrapper-1\")\r\n      this.getWrapperStyle(\"wrapper-2\")\r\n    }\r\n\r\n    // If list is changed reset pagination.\r\n    if (this.props.currentList !== prevProps.currentList) {\r\n      this.setState({ notDoneCurrentPage: 0 })\r\n      this.setState({ doneCurrentPage: 0 })\r\n      this.props.setOffset(true, 0)\r\n      this.props.setOffset(false, 0)\r\n      this.props.setCurrentPage(true, this.state.doneCurrentPage)\r\n      this.props.setCurrentPage(false, this.state.notDoneCurrentPage)\r\n    }\r\n\r\n    // Check if pagination is on an empty page, change to previous page if true.\r\n    this.ifEmptyPage()\r\n    if (prevProps.donePaginationOffset !== this.props.getPaginationOffset(true)) {\r\n      this.props.getTasks(true)\r\n    }\r\n    if (prevProps.notDonePaginationOffset !== this.props.getPaginationOffset(false)) {\r\n      this.props.getTasks(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check both tasks lists if the current page is larger than pageCount.\r\n   * If true move to last page and update the offset accordingly.\r\n   */ \r\n  ifEmptyPage = async () => {\r\n    if (this.state.notDoneCurrentPage >= this.props.notDonePageCount) {\r\n\r\n      let offset = (this.props.notDonePageCount - 1) * this.props.getPaginationLimit(false);\r\n      this.props.setOffset(false, offset);\r\n\r\n      this.setState({ notDoneCurrentPage: this.props.notDonePageCount - 1 })\r\n      this.props.setCurrentPage(false, this.state.notDoneCurrentPage)\r\n    }\r\n\r\n    if (this.state.doneCurrentPage >= this.props.donePageCount) {\r\n\r\n      let offset = (this.props.donePageCount - 1) * this.props.getPaginationLimit(true);\r\n      this.props.setOffset(true, offset);\r\n      console.log(offset)\r\n\r\n      this.setState({ doneCurrentPage: this.props.donePageCount - 1 })\r\n      this.props.setCurrentPage(true, this.state.doneCurrentPage)\r\n    }\r\n  }\r\n\r\n  getFlexContainerStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-evenly\",\r\n      flex: this.props.flex,\r\n      minHeight: \"0\"\r\n    }\r\n  }\r\n\r\n  getWrapperStyle = (wrapperId) => {    \r\n    const e = document.getElementById(wrapperId);\r\n    const id = wrapperId.slice(-1, wrapperId.length); \r\n    const d = this.state.display.get(Number(id))[0];\r\n    e.style.height = d;\r\n  }\r\n\r\n  toggleDisplay = (subheaderId) => {\r\n    const m = new Map(this.state.display)\r\n    const id = subheaderId.slice(-1, subheaderId.length);\r\n    // d === displayed height which is either 0px or 100% of parent container\r\n    const d = m.get(Number(id))[0];\r\n    // b === boolean value for caret: up (true) or down (false)\r\n    const b = m.get(Number(id))[1];\r\n    \r\n    m.set(Number(id), d === \"100%\" && b === false ? [0, !b] : [\"100%\", !b]);\r\n\r\n    this.setState({ display: m })\r\n  }\r\n\r\n  // take selected page and calculate offset based on pagination limit and page number.\r\n  // Then update current page and reload tasks.\r\n  handleNotDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(false);\r\n\r\n    this.props.setOffset(false, offset);\r\n    this.props.setCurrentPage(false, selectedPage);\r\n    this.setState({\r\n        notDoneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(false)\r\n    });\r\n\r\n  };\r\n\r\n  handleDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(true);\r\n\r\n    this.props.setOffset(true, offset);\r\n    this.props.setCurrentPage(true, selectedPage)\r\n    this.setState({\r\n        doneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(true)\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getFlexContainerStyle()}>\r\n        {/* Subheader and caret for unfinished tasks */}\r\n        <div style={{ width: \"50%\", height: \"80%\", padding: \"1.5rem\", margin: \"1.5rem\" }}>\r\n          <Subheader  \r\n            id={\"sub-1\"}\r\n            name=\"To Do\"\r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(1)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-1\" style={{ height: \"100%\", transition: \"height 1s\", overflowY: \"auto\" }}>\r\n            {/* Iterate through and render unfinished tasks */}\r\n            {this.props.todos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id} \r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Set classname according to current customization settings for CSS */}\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n            {/* If more than 1 page exists render pagination */}\r\n            {this.props.notDonePageCount > 1\r\n              ? <ReactPaginate\r\n                  previousLabel={\"prev\"}\r\n                  nextLabel={\"next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={this.props.notDonePageCount}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={this.handleNotDonePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                  forcePage={this.state.notDoneCurrentPage}\r\n                />\r\n              : <p>{\"\"}</p>\r\n            }\r\n          </div>\r\n        </div>\r\n        {/* Subheader and caret for finished tasks */}\r\n        <div style={{ width: \"50%\", height: \"80%\", padding: \"1.5rem\", margin: \"1.5rem\" }}>\r\n          <Subheader  \r\n            id=\"sub-2\"\r\n            name=\"Done\" \r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(2)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-2\" style={{ height: \"100%\", transition: \"height 1s\", overflowY: \"auto\" }}>\r\n            {/* Iterate through and render finished tasks */}\r\n            {this.props.doneTodos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Set classname according to current customization settings for CSS */}\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n          {/* If more than 1 page exists render pagination */}\r\n          {this.props.donePageCount > 1\r\n            ? <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={this.props.donePageCount}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={this.handleDonePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                forcePage={this.state.doneCurrentPage}\r\n              />\r\n            : <p>{\"\"}</p>\r\n          }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoContainer;\r\n","import React, { Component } from \"react\";\r\nimport ButtonContainer from \"../ButtonContainer\";\r\nimport TextInputField from \"./TextInputField\";\r\n\r\nclass Dock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMobileView: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      backgroundColor: this.props.palette.primary,\r\n      lineHeight: \"2.1875rem\",\r\n      height: \"4.0625rem\",\r\n      flex: this.props.flex,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        {this.state.isMobileView ? (\r\n          <ButtonContainer />\r\n        ) : (\r\n          <TextInputField \r\n            addTodo={this.props.addTodo} \r\n            currentList={this.props.currentList}\r\n            btnText=\"Add\"\r\n            paddingInput=\"0.625rem\"\r\n            paddingSubmit=\"0.625rem\"\r\n            marginInput=\"0.9375rem 0 0.9375rem 1.25rem\"\r\n            marginSubmit=\"0.9375rem 1.25rem 0.9375rem 0\"\r\n            bgColorSubmit={this.props.palette.fillButton}\r\n            textColorSubmit={this.props.palette.fillTextColor}\r\n            bgColorInput={this.props.palette.fillInputColor}\r\n            textColorInput={this.props.palette.fillTextColor}\r\n            placeholder=\"Any homework to do?\"\r\n            borderRadiusInput=\"0.75rem 0 0 0.75rem\"\r\n            borderRadiusSubmit=\"0 0.75rem 0.75rem 0\"\r\n            borderBottom=\"none\"\r\n            flexInput=\"10\"\r\n            flexBtn=\"1\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dock;\r\n","var colors = {\r\n  // RED: default\r\n  red: {\r\n    primary: \"#cc5252\",\r\n    secondary: \"#962029\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#cc5252\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#cc5252\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#cc5252\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // BLUE\r\n  blue: {\r\n    primary: \"#2554C7\",\r\n    secondary: \"#193a8b\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#2554C7\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#2554C7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#2554C7\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // GREEN\r\n  green: {\r\n    primary: \"#278427\",\r\n    secondary: \"#1a581a\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#278427\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#278427\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#278427\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // VIOLET\r\n  violet: {\r\n    primary: \"#6e2ac7\",\r\n    secondary: \"#461B7E\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#6e2ac7\", \r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#6e2ac7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // DARK\r\n  dark: {\r\n    primary: \"#333\",\r\n    secondary: \"#3a3a3a\",\r\n    bgPrimary: \"#1E1E1E\",\r\n    bgSecondary: \"#232323\",\r\n    fillList: \"#1e2021\",\r\n    fillActiveList: \"#444\",\r\n    fillTask: \"#444\",\r\n    fillEditBg: \"#444\",\r\n    fillEditText: \"whitesmoke\",\r\n    fillButton: \"#444\",\r\n    fillClearButton: \"whitesmoke\",\r\n    fillHeaderColor: \"whitesmoke\",\r\n    fillTextColor: \"whitesmoke\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"#1e2021\"\r\n  },\r\n}\r\n\r\nexport default colors;","import React, { Component } from \"react\";\r\nimport SideMenu from \"./components/list/SideMenu\";\r\nimport MainHeader from \"./components/todo/MainHeader\";\r\nimport TodoContainer from \"./components/todo/TodoContainer\";\r\nimport Dock from \"./components/todo/Dock\";\r\nimport axios from \"axios\";\r\nimport colors from \"./colors\";\r\n\r\nconst url = \"https://tamk-4a00ez62-3001-group08.herokuapp.com/api/\";\r\nconst apikey = process.env.REACT_APP_BACKEND_APIKEY;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      deadlineFilter: '',\r\n      orderTasks: '+created',\r\n      currentList: 1,\r\n      currentColor: 0,\r\n      todos: [],\r\n      todosCount: 1,\r\n      doneTodos: [],\r\n      doneTodosCount: 1,\r\n      lists: [],\r\n      refresh: false,\r\n      sideMenuIsOpen: false,\r\n      notDonePaginationLimit: 11,\r\n      notDonePaginationOffset: 0,\r\n      notDonePageCount: 1,\r\n      notDoneCurrentPage: 0,\r\n      donePaginationLimit: 11,\r\n      donePaginationOffset: 0,\r\n      donePageCount: 1,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTasks(true);\r\n    this.getTasks(false);\r\n    this.getLists();\r\n    this.getTasksCount(true);\r\n    this.getTasksCount(false);\r\n    this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n    this.getPageCount(true, this.state.notDonePaginationLimit, this.state.todosCount)\r\n    this.getListColor(this.state.currentList)\r\n  }\r\n\r\n  /**\r\n   * call backend with APIKey and any required filters and sorters included. \r\n   * Pagination included at the end of the string.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for getting finished and unfinished tasks.\r\n   */\r\n  getTasks = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&sort=${this.state.orderTasks}&limit=${this.getPaginationLimit(isDone)}&offset=${this.getPaginationOffset(isDone)}`)\r\n    .then((res) => isDone ? this.setState({ doneTodos: res.data }) : this.setState({ todos: res.data }))\r\n    .then(this.getTasksCount(isDone))\r\n    .then(this.getListColor(this.state.currentList));\r\n  }\r\n\r\n  /**\r\n   * Used for checking the color of the list when the page is first loaded\r\n   * and when switching to a new list/refreshing tasks.\r\n   * \r\n   * @param {int} listId id of the list whose color is being requested.\r\n   */\r\n  getListColor = (listId) => {\r\n    axios.get(`${url}lists/${listId}?apikey=${apikey}`).then((res) => {\r\n      this.setState({ currentColor: res.data[0].color });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a count of tasks for pagination from backend to save on the amount of data\r\n   * that has to be downloaded.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for counting finished and unfinished tasks.\r\n   */\r\n  getTasksCount = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&count=true`)\r\n    .then((res) => isDone ? this.setState({ doneTodosCount: res.data[0].count }) : this.setState({ todosCount: res.data[0].count }))\r\n    .then(() => {\r\n      if (isDone) {\r\n        this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n      } else {\r\n        this.getPageCount(false, this.state.notDonePaginationLimit, this.state.todosCount)\r\n      }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Calculate the amount of pages by dividing the amount of tasks\r\n   * with the limit per page and rounding up.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used with finished and unfinished tasks.\r\n   * @param {int} limit the amount of tasks that can be loaded at the same time.\r\n   * @param {int} count The amount of todos.\r\n   */\r\n  getPageCount = (isDone, limit, count)  => {\r\n    if (isDone) {\r\n      this.setState({ donePageCount: Math.ceil(count / limit) })\r\n    } else {\r\n      this.setState({ notDonePageCount: Math.ceil(count / limit) })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get every list from the backend, apikey included.\r\n   */\r\n  getLists = () => {\r\n    axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n      this.setState({ lists: res.data });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * update database boolean value of given id to the given value.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {boolean} checked the new value of the todo.\r\n   */\r\n  toggleTodo = (id, checked) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        is_done: checked,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * update priority value of given id to priorityValue.\r\n   * The number is treated to be anywhere between 1 and 5.\r\n   * 5 means highest priority while 1 means the lowest.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {int} priorityValue the new priority value being assigned.\r\n   */\r\n  setTodoPriority = (id, priorityValue) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        priority: priorityValue,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n    \r\n  /**\r\n   * This method is used for updating list names.\r\n   * \r\n   * @param {int} id  id of the list being modified.\r\n   * @param {string} name the new value of the list name being assigned.\r\n   */\r\n  editList = (id, name) => {\r\n    axios\r\n      .put(`${url}lists/${id}?apikey=${apikey}`, { name })\r\n      .then(() => this.getLists());\r\n  };\r\n\r\n  /**\r\n   * This method is used for updating task texts.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {string} title the new value of the task text being assigned.\r\n   */\r\n  editTodo = (id, title) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, { title })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline date of the task.\r\n   * Only the year, month and day are saved following the ISO 8601 standard.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {date} deadlineDate the value of the deadline date being assigned.\r\n   */\r\n  setTodoDeadline = (id, deadlineDate) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `${deadlineDate._d.getFullYear()}-${deadlineDate._d.getMonth() + 1}-${deadlineDate._d.getDate()}`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline as null.\r\n   * In the database this appears as \"0000-00-00\".\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   */\r\n  setTodoDeadlineNull = (id) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `NULL`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method deletes the task of given Id from local- and serverside data.\r\n   * Also refreshes taskCount and PageCount after that for pagination purposes.\r\n   * \r\n   * @param {int} id id of the task being deleted.\r\n   * @param {boolean} checked used to determine where to delete the local data.\r\n   */\r\n  deleteTodo = (id, checked) => {\r\n    axios.delete(`${url}tasks/${id}?apikey=${apikey}`).then(() => {\r\n      if (checked) {\r\n        this.setState({ doneTodos: [...this.state.doneTodos.filter((todo) => todo.id !== id)] });\r\n        this.getTasksCount(true);\r\n        this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount);\r\n      } else {\r\n        this.setState({ todos: [...this.state.todos.filter((todo) => todo.id !== id)] });\r\n        this.getTasksCount(false);\r\n        this.getPageCount(false, this.state.notDonePaginationLimit, this.state.todosCount);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * delete the list of given id from local- and serverside data.\r\n   * \r\n   * @param {int} id id of the list being deleted.\r\n   */\r\n  deleteList = (id) => {\r\n    axios.delete(`${url}lists/${id}?apikey=${apikey}`).then(() => {\r\n      this.setState({\r\n        lists: [...this.state.lists.filter((list) => list.id !== id)],\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * add a new task and include list Id for the database to use as a foreign key\r\n   * and the text content of the task, rest of the data is assigned as defaults.\r\n   * \r\n   * @param {int} listId id of the list the list the task will be included in.\r\n   * @param {string} title the text content of the new task.\r\n   */\r\n  addTodo = (listId, title) => {\r\n    axios\r\n      .post(`${url}tasks/?apikey=${apikey}`, {\r\n        listId,\r\n        title,\r\n      })\r\n      .then(() => this.getTasks(false));\r\n  };\r\n\r\n  /**\r\n   * Create a new list, only name is required since everything else is assigned\r\n   * to its default values.\r\n   * \r\n   * @param {string} name The name of the new list.\r\n   */\r\n  addList = (name) => {\r\n    axios\r\n      .post(`${url}lists/?apikey=${apikey}`, {\r\n        name,\r\n      })\r\n      .then(() => {\r\n        axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n          this.setState({ lists: res.data });\r\n          this.setList(res.data[res.data.length-1].id)\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Update currentList value and load new tasks with the value as a filter.\r\n   * \r\n   * @param {int} listId id of the list that'll be used in the getTasks filters.\r\n   */\r\n  setList = async (listId) => {\r\n    await this.setState({ currentList: listId });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * assign sorter(s) and refresh current tasks with the new sorter.\r\n   * \r\n   * @param {string} order includes sorting values separated by a \",\" symbol.\r\n   */\r\n  setOrderTasks = async (order) => {\r\n    await this.setState({ orderTasks: order });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * Iterate through current array of lists and find where Id matches currentList.\r\n   * Then return the name of that list to be used in the MainHeader.js\r\n   */\r\n  getListNameById = () => {\r\n    for (const list of this.state.lists) {\r\n      if (list['id'] === this.state.currentList) {\r\n        return list['name']\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set deadline filter to be used with getTasks()\r\n   * Then refresh the tasks to apply the filter.\r\n   * \r\n   * Only used in FilterMenu.js and chooses between showing all tasks or\r\n   * only those either with or without a deadline date.\r\n   * \r\n   * @param {string} dlFilter is sent either empty, \"null\" or \"notNull\" String.\r\n   */\r\n  setDeadlineFilter = async (dlFilter) => {\r\n    await this.setState({ deadlineFilter: dlFilter });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * used to either add the deadline filter to getTasks\r\n   * or if the deadlineFilter String is empty return an empty string\r\n   * as to not mess with the rest of the get request.\r\n   */\r\n  getDeadlineFilter = () => {\r\n    let dl = `&deadline=${this.state.deadlineFilter}`;\r\n    if (dl === '&deadline=') {\r\n      dl = '';\r\n    }\r\n    return dl;\r\n  };\r\n\r\n  // Used for animated opening and closing of the list menu.\r\n  openSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"20%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  closeSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"0%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  /** \r\n   * Getters and setters for client-side pagination variables.\r\n   * @param {boolean} done is used on each to switch between finished and unfinished tasks.\r\n   */\r\n  getPaginationLimit = done => {\r\n    if (done) {\r\n      return this.state.donePaginationLimit;\r\n    } else {\r\n      return this.state.notDonePaginationLimit;\r\n    }\r\n  }\r\n\r\n  getPaginationOffset = done => {\r\n    if (done) {\r\n      return this.state.donePaginationOffset;\r\n    } else {\r\n      return this.state.notDonePaginationOffset;\r\n    }\r\n  }\r\n\r\n  setOffset = (done, newOffset) => {\r\n    if (done) {\r\n      this.setState({ donePaginationOffset: newOffset })\r\n    } else {\r\n      this.setState({ notDonePaginationOffset: newOffset })\r\n    }\r\n  }\r\n\r\n  setCurrentPage = (done, newPage) => {\r\n    if (done) {\r\n      this.setState({ doneCurrentPage: newPage })\r\n    } else {\r\n      this.setState({ notDoneCurrentPage: newPage })\r\n    }\r\n  }\r\n\r\n  // Color getters and setters.\r\n  setColor = async (id, color) => {\r\n    await axios.put(`${url}lists/${id}?apikey=${apikey}`, { color })\r\n    await this.getLists()\r\n    await this.setState({ currentColor: color })\r\n  }\r\n\r\n  getCurrentColor = () => {\r\n    const colorCode = this.state.currentColor\r\n    const colorCodes = {red: 0, blue: 1, green: 2, violet: 3, dark: 4}\r\n\r\n    for (const key in colorCodes) {\r\n      if (colorCodes[key] === colorCode) return key;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const color = this.getCurrentColor();\r\n    const palette = colors[color];\r\n    document.body.style.backgroundColor = palette.bgPrimary;\r\n\r\n    return (\r\n      <div className=\"app-container\" style={{\r\n          display: \"flex\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        {/* Includes lists and the input for adding new lists. */}\r\n        <SideMenu\r\n          lists={this.state.lists}\r\n          deleteList={this.deleteList}\r\n          setList={this.setList}\r\n          addList={this.addList}\r\n          editList={this.editList}\r\n          currentList={this.state.currentList}\r\n          palette={palette}\r\n          \r\n        />\r\n        <div className={\"main-container\"} style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flex: \"auto\",\r\n            backgroundColor: palette.bgPrimary,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {/* Includes the title and dropdown menus for customization.*/}\r\n          <MainHeader \r\n            name={this.getListNameById()}\r\n            setOrderTasks={this.setOrderTasks}\r\n            setDeadlineFilter={this.setDeadlineFilter}\r\n            flex=\"initial\"\r\n            openSideMenu={this.openSideMenu}\r\n            closeSideMenu={this.closeSideMenu}\r\n            setColor={this.setColor}\r\n            currentList={this.state.currentList}\r\n            palette={palette}\r\n          />\r\n\r\n          {/* Includes tasks, all of their associated buttons \r\n              as well as pagination, subheaders and \r\n              carets for collapsing the content. */}\r\n          <TodoContainer\r\n            todos={this.state.todos}\r\n            doneTodos={this.state.doneTodos}\r\n            toggleTodo={this.toggleTodo}\r\n            setTodoPriority={this.setTodoPriority}\r\n            setTodoDeadline={this.setTodoDeadline}\r\n            editTodo={this.editTodo}\r\n            deleteTodo={this.deleteTodo}\r\n            setTodoDeadlineNull={this.setTodoDeadlineNull}\r\n            flex=\"auto\"\r\n            palette={palette}\r\n            todosCount={this.state.todosCount}\r\n            doneTodosCount={this.state.doneTodosCount}\r\n            getPaginationOffset={this.getPaginationOffset}\r\n            getPaginationLimit={this.getPaginationLimit}\r\n            setOffset={this.setOffset}\r\n            getTasks={this.getTasks}\r\n            notDonePageCount={this.state.notDonePageCount}\r\n            donePageCount={this.state.donePageCount}\r\n            setCurrentPage={this.setCurrentPage}\r\n            notDoneCurrentPage={this.state.notDoneCurrentPage}\r\n            doneCurrentPage={this.state.doneCurrentPage}\r\n            currentList={this.state.currentList}\r\n            currentColor={this.state.currentColor}\r\n            notDonePaginationOffset={this.state.notDonePaginationOffset}\r\n            donePaginationOffset={this.state.donePaginationOffset}\r\n          />\r\n          {/* Include inputs for creating new tasks.*/}\r\n          <Dock \r\n            addTodo={this.addTodo} \r\n            currentList={this.state.currentList}\r\n            flex=\"initial\"\r\n            palette={palette}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}