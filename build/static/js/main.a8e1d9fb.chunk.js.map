{"version":3,"sources":["components/SubmitButton.js","components/todo/TextInput.js","components/todo/TextInputField.js","components/list/ListItem.js","components/list/ListInput.js","components/list/ListInputField.js","components/list/SideMenu.js","components/todo/SearchField.js","components/todo/SideMenuButton.js","components/todo/ColorMenu.js","components/todo/SortMenu.js","components/todo/FilterMenu.js","components/todo/MainHeader.js","components/todo/DateMenu.js","components/todo/TodoItem.js","components/todo/Caret.js","components/todo/Subheader.js","components/todo/TodoContainer.js","components/todo/Dock.js","colors.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","getSubmitButtonStyle","flex","props","flexBtn","backgroundColor","bgColorSubmit","color","textColorSubmit","height","heightSubmit","margin","marginSubmit","border","borderRadius","borderRadiusSubmit","padding","paddingSubmit","type","value","this","text","className","style","Component","TextInput","getTextInputStyle","display","flexInput","paddingInput","marginInput","verticalAlign","borderBottom","borderRadiusInput","textColorInput","bgColorInput","heightInput","id","idInput","name","autocomplete","placeholder","title","onChange","onKeyUp","handleOnKeyUp","borderbottom","borderradius","TextInputField","onSubmit","e","preventDefault","undefined","addTodo","state","currentList","setState","editTodo","finishEditing","editId","editList","target","listId","flexDirection","alignItems","width","showButton","btnText","TodoItem","getItemStyle","justifyContent","fontSize","textAlign","palette","fillActiveTextColor","fillTextColor","fontStyle","fontWeight","borderTop","borderRight","borderLeft","cursor","fillActiveList","fillList","getButtonStyle","background","btnStyle","zIndex","float","handleEditEvent","isEditing","getDialogTitle","length","substring","submit","confirmAlert","list","message","buttons","label","onClick","deleteList","console","log","stopPropagation","primary","onMouseEnter","onMouseLeave","setList","bind","textOverflow","overflow","icon","faEdit","faTrashAlt","ListInput","getListInputStyle","listName","ListInputField","addList","fillInputColor","fillButton","SideMenu","getSideMenuStyle","bgSecondary","getSideMenuHeaderStyle","secondary","fillHeaderColor","getSideMenuFooterStyle","lineHeight","lists","marginTop","minHeight","flexGrow","overflowY","map","ListItem","SearchField","getStyle","maxWidth","componentDidUpdate","prevProps","searchTasks","isSearching","getListName","todo","list_id","bgPrimary","position","top","right","overflowX","fillClearButton","marginRight","listStyleType","task","i","SideMenuButton","handleClickEvent","a","menuIsOpen","closeSideMenu","openSideMenu","FilterMenu","showMenu","closeMenu","event","document","addEventListener","dropdownMenu","contains","removeEventListener","faPalette","size","setColor","React","SortMenu","faSortAmountUpAlt","setOrderTasks","faFilter","setDeadlineFilter","MainHeader","getMainHeaderStyle","ColorMenu","DateMenu","dateAssembler","isNaN","dateDisplay","getFullYear","deadline","year","month","toLocaleString","day","getDate","faClock","dateTime","deleteDeadline","setTodoDeadlineNull","todoId","faEraser","Date","isDateEditing","date","onDateChange","stopDateEditing","focused","onFocusChange","small","hideKeyboardShortcutsPanel","withPortal","firstDayOfWeek","marginLeft","bottom","marginBottom","fillTask","whiteSpace","newDeadline","setTodoDeadline","startDateEditing","handleValueChange","tempPriority","setPriorityDialog","min","max","defaultValue","priority","marks","1","2","3","4","5","handleStyle","sliderColor","trackStyle","activeDotStyle","setTodoPriority","getElementsByClassName","getAttribute","checked","fillEditBg","fillEditText","toggleTodo","htmlFor","primaryBg","borderWidth","borderStyle","borderColor","textDecoration","is_done","textDecorationSkip","overflowWrap","faCalendarAlt","faWeightHanging","deleteTodo","Caret","getUpCaretStyle","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","getDownCaretStyle","up","toggleDisplay","Subheader","getH2Style","TodoContainer","ifEmptyPage","notDoneCurrentPage","notDonePageCount","offset","getPaginationLimit","setOffset","setCurrentPage","doneCurrentPage","donePageCount","getFlexContainerStyle","getWrapperStyle","wrapperId","getElementById","slice","d","get","Number","subheaderId","m","Map","b","set","handleNotDonePageClick","selectedPage","selected","getTasks","handleDonePageClick","todos","prevState","donePaginationOffset","getPaginationOffset","notDonePaginationOffset","transition","currentColor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","doneTodos","Dock","isMobileView","colors","red","blue","green","violet","dark","url","apikey","process","App","isDone","axios","getDeadlineFilter","orderTasks","then","res","data","getTasksCount","getListColor","doneTodosCount","count","todosCount","getPageCount","donePaginationLimit","notDonePaginationLimit","limit","Math","ceil","getLists","put","priorityValue","deadlineDate","_d","getMonth","delete","filter","post","order","getListNameById","dlFilter","deadlineFilter","dl","el","done","newOffset","newPage","getCurrentColor","colorCode","colorCodes","key","results","tasks","refresh","sideMenuIsOpen","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8e1d9fb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SubmitButton extends Component {\r\n  getSubmitButtonStyle = () => {\r\n    return {\r\n      flex: this.props.flexBtn,\r\n      backgroundColor: this.props.bgColorSubmit,\r\n      color: this.props.textColorSubmit,\r\n      height: this.props.heightSubmit,\r\n      margin: this.props.marginSubmit,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusSubmit,\r\n      padding: this.props.paddingSubmit\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        value={this.props.text}\r\n        className=\"btn\"\r\n        style={this.getSubmitButtonStyle()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TextInput extends Component {\r\n  getTextInputStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      flex: this.props.flexInput,\r\n      padding: this.props.paddingInput,\r\n      margin: this.props.marginInput,\r\n      verticalAlign: this.props.verticalAlign,\r\n      border: \"none\",\r\n      borderBottom: this.props.borderBottom,\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      height: this.props.heightInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        id={this.props.idInput}\r\n        type=\"text\"\r\n        name=\"title\"\r\n        autocomplete=\"off\"\r\n        style={this.getTextInputStyle()}\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.title}\r\n        onChange={this.props.onChange}\r\n        onKeyUp={this.props.idInput === 'search' ? () => this.props.handleOnKeyUp(this.props.title) : () => {return}}\r\n        borderbottom={this.props.borderBottom}\r\n        borderradius={this.props.borderRadiusInput}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nclass TextInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listId: 1,\r\n      title: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {   \r\n    e.preventDefault();\r\n    \r\n    if (this.props.addTodo !== undefined ) {\r\n      if (this.state.title === \"\") {\r\n        return\r\n      }\r\n      \r\n      this.props.addTodo(this.props.currentList, this.state.title);\r\n      this.setState({ title: \"\" });\r\n    }\r\n    \r\n    if (this.props.editTodo !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editTodo(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n\r\n    if (this.props.editList !== undefined) {\r\n      if (this.state.title === \"\") {\r\n        this.props.finishEditing();\r\n        return\r\n      }\r\n\r\n      this.props.editList(this.props.editId, this.state.title)\r\n      this.setState({ title: \"\" });\r\n      this.props.finishEditing();\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit}\r\n        autocomplete=\"off\" \r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", height: this.props.height, width: this.props.width}}\r\n      >\r\n        <TextInput \r\n          title={this.state.title} \r\n          onChange={this.onChange} \r\n          handleOnKeyUp={this.props.handleOnKeyUp}\r\n          idInput={this.props.idInput}\r\n          flexInput={this.props.flexInput}\r\n          paddingInput={this.props.paddingInput}\r\n          marginInput={this.props.marginInput}\r\n          placeholder={this.props.placeholder}\r\n          borderBottom={this.props.borderBottom}\r\n          borderRadiusInput={this.props.borderRadiusInput}\r\n          bgColorInput={this.props.bgColorInput}\r\n          textColorInput={this.props.textColorInput}\r\n          width={this.props.width}\r\n          heightInput={this.props.heightInput}\r\n        />\r\n        {\r\n          (this.props.showButton)\r\n          ? <SubmitButton \r\n            heightSubmit={this.props.heightSubmit}\r\n            paddingSubmit={this.props.paddingSubmit}\r\n            marginSubmit={this.props.marginSubmit}\r\n            flexBtn={this.props.flexBtn}\r\n            text={this.props.btnText} \r\n            borderRadiusSubmit={this.props.borderRadiusSubmit}\r\n            bgColorSubmit={this.props.bgColorSubmit}\r\n            textColorSubmit={this.props.textColorSubmit}\r\n          />\r\n          : <></>\r\n        }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInputField;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport '../react-confirm-alert.css'; // Import css\r\nimport TextInputField from '../todo/TextInputField'\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      isEditing: false\r\n    };\r\n  }\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      padding: \"0.5rem 1.25rem\",\r\n      fontSize: \"1em\",\r\n      margin: \"1% 1% 1% 0\",\r\n      textAlign: \"left\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      fontStyle: this.props.currentList === this.props.id ? \"italic\" : \"normal\",\r\n      fontWeight: \"600\",\r\n      borderRadius: \"0 0.9375rem 0.9375rem 0\",\r\n      borderTop: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderRight: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderBottom: \"0.0625rem solid rgba(0, 0, 0, 0.3)\",\r\n      borderLeft: \"none\",\r\n      width: \"90%\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: this.props.currentList === this.props.id ? this.props.palette.fillActiveList : this.props.palette.fillList\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      width: \"5%\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0.125rem\",\r\n      color: this.props.currentList === this.props.id ? this.props.palette.fillActiveTextColor : this.props.palette.fillTextColor,\r\n      display: this.state.btnStyle.display,\r\n      zIndex: \"1\",\r\n      float: \"right\",\r\n    };\r\n  };\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  // Stop title from overflowing the confirmAlert for the priority slider.\r\n  getDialogTitle = title => {\r\n    if (title.length > 20) {\r\n      title = title.substring(0, 18) + \"...\";\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  submit = (e, id) => {\r\n    confirmAlert({\r\n      title: `Are you sure you want to delete list ${this.getDialogTitle(this.props.list.name)}?`,\r\n      message: \"This action cannot be undone.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => this.props.deleteList(id)\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => console.log(\"Delete alert rejected.\")\r\n        }\r\n      ]\r\n    });\r\n    // Stops onClick event from bubbling to parent event's onClick event\r\n    e.stopPropagation()\r\n  };\r\n\r\n  render() {\r\n    const { id, name } = this.props.list;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal list item\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        onClick={this.props.setList.bind(this, id)}\r\n        style={this.getItemStyle()}\r\n      >\r\n        <div style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>{name}</div>\r\n        <span style={{\r\n            display: \"flex\", \r\n            flexDirection: \"row\", \r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => this.handleEditEvent()}\r\n            style={this.getButtonStyle()}\r\n            >\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </button>\r\n          <button\r\n            onClick={e => this.submit(e, id)}\r\n            style={this.getButtonStyle()}\r\n          >\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </button>\r\n        </span>\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        btnText=\"Edit\" \r\n        editList={this.props.editList}\r\n        bgColorSubmit={this.props.palette.primary}\r\n        textColorSubmit={this.props.palette.fillActiveTextColor}\r\n        placeholder={name}\r\n        editId={id}\r\n        finishEditing={this.finishEditing}\r\n        flexInput=\"10\"\r\n        flexBtn=\"1\"\r\n        height=\"2.4375rem\"\r\n        width=\"90%\"\r\n        heightInput=\"2.4375rem\"\r\n        heightSubmit=\"2.4375rem\"\r\n        paddingInput=\"0.5rem 1.25rem\"\r\n        paddingSubmit=\"0.5rem 1.25rem\"\r\n        marginInput=\"1% 0 1% 0\"\r\n        marginSubmit=\"1% 0 1% 0\"\r\n        borderBottom=\"0.0625rem solid #999\"\r\n        borderRadiusInput= \"0\"\r\n        borderRadiusSubmit= \"0 1rem 1rem 0\"\r\n        showButton={true}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListInput extends Component {\r\n  getListInputStyle = () => {\r\n    return {\r\n      padding: \"0.625rem\",\r\n      margin: this.props.marginInput,\r\n      border: \"none\",\r\n      borderRadius: this.props.borderRadiusInput,\r\n      color: this.props.textColorInput,\r\n      backgroundColor: this.props.bgColorInput,\r\n      flex: this.props.flexInput\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name=\"listName\"\r\n        style={this.getListInputStyle()}\r\n        placeholder=\"Create a list\"\r\n        value={this.props.listName}\r\n        onChange={this.props.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInput;\r\n","import React, { Component } from \"react\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport ListInput from \"./ListInput\";\r\n\r\nclass ListInputField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listName: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.listName === \"\") {\r\n      return;\r\n    }\r\n\r\n    this.props.addList(this.state.listName);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit} \r\n        style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"row\", \r\n          height: \"4.0625rem\", \r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          margin: \"0 auto\"\r\n        }}\r\n      >\r\n        <ListInput \r\n          title={this.state.listName} \r\n          onChange={this.onChange}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          flexInput=\"4.5\" \r\n          paddingInput=\"0.625rem\"\r\n          marginInput=\"0.9375rem 0 0.9375rem 1.25rem\" \r\n          borderRadiusInput=\"0.75rem 0 0 0.75rem\" \r\n        />\r\n        <SubmitButton \r\n          text=\"Add\" \r\n          flexBtn=\"1\" \r\n          bgColorSubmit={this.props.palette.fillButton}\r\n          textColorSubmit={this.props.palette.fillTextColor}\r\n          paddingSubmit=\"0.625rem\"\r\n          marginSubmit=\"0.9375rem 1.25rem 0.9375rem 0\" \r\n          borderRadiusSubmit=\"0 0.75rem 0.75rem 0\" \r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListInputField;\r\n","import React, { Component } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListInputField from \"./ListInputField\";\r\n\r\nclass SideMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lists: [],\r\n    };\r\n  }\r\n\r\n  getSideMenuStyle = () => {\r\n    return {\r\n      width: \"0rem\",\r\n      height: \"100%\",\r\n      flex: \"initial\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: this.props.palette.bgSecondary, \r\n    };\r\n  };\r\n\r\n  getSideMenuHeaderStyle = () => {\r\n    return {\r\n      textAlign: \"left\",\r\n      padding: \"0.9375rem 1.25rem\",\r\n      backgroundColor: this.props.palette.secondary,\r\n      height: \"4.5rem\",\r\n      color: this.props.palette.fillHeaderColor\r\n    };\r\n  };\r\n\r\n  getSideMenuFooterStyle = () => {\r\n    return {\r\n      backgroundColor: this.props.palette.secondary,\r\n      lineHeight: \"2.1875rem\",\r\n      height: \"4.0625rem\",\r\n      width: \"100%\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sideMenu\" style={this.getSideMenuStyle()}>\r\n        <h1 style={this.getSideMenuHeaderStyle()}>Lists</h1>\r\n\r\n        <div style={{ marginTop: \"0.9375rem\", minHeight: 0, flexGrow: \"1\", overflowY: \"auto\"}}>\r\n          {this.props.lists.map((list) => {\r\n            return (\r\n              <ListItem\r\n                id={list.id}\r\n                key={list.id}\r\n                list={list}\r\n                deleteList={this.props.deleteList}\r\n                setList={this.props.setList}\r\n                editList={this.props.editList}\r\n                currentList={this.props.currentList}\r\n                palette={this.props.palette}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={this.getSideMenuFooterStyle()}>\r\n          <ListInputField addList={this.props.addList} palette={this.props.palette} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { Component } from \"react\";\r\nimport TextInputField from \"./TextInputField\";\r\nimport \"./css/dropdown.css\";\r\n\r\nclass SearchField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      isSearching: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: \"1\",\r\n      display: \"inline-block\",\r\n      maxWidth: \"100%\",\r\n      overflow: \"auto\"\r\n    }\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (this.props.searchTasks !== prevProps.searchTasks) {\r\n      this.setState({ isSearching: true })\r\n    }\r\n  }\r\n\r\n  getListName = (lists, todo) => {\r\n    const { list_id } = todo;\r\n    let name = \"\";\r\n\r\n    for (const list of lists) {\r\n      if (list.id === list_id) {\r\n        name = list.name\r\n      }\r\n    }\r\n\r\n    return name\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <TextInputField\r\n          idInput=\"search\"\r\n          title={this.state.title} \r\n          handleOnKeyUp={this.props.handleOnKeyUp}\r\n          placeholder=\"Search tasks\"\r\n          paddingInput=\"0.625rem\"\r\n          marginInput=\"0.9375rem 0.9375rem 0.9375rem 1.25rem\"\r\n          flexInput=\"3\"\r\n          borderBottom=\"none\"\r\n          borderRadiusInput=\"0.75rem 0.75rem 0.75rem 0.75rem\"\r\n          bgColorInput={this.props.palette.fillInputColor}\r\n          textColorInput={this.props.palette.fillTextColor}\r\n          showButton={false}\r\n          isSearching={this.state.isSearching}\r\n          autocomplete=\"off\"\r\n          />\r\n        {\r\n          (this.state.isSearching)\r\n          ? <div \r\n              className=\"search-container\"\r\n              style={{ \r\n                color: this.props.palette.fillTextColor, \r\n                width: \"224px\",\r\n                height: \"50%\",\r\n                backgroundColor: this.props.palette.bgPrimary,\r\n                position: \"absolute\",\r\n                top: \"4.375rem\",\r\n                right: \"8%\",\r\n                zIndex: 1,\r\n                overflowY: \"auto\",\r\n                overflowX: \"hidden\",\r\n                border: `2px solid ${this.props.palette.primary}`,\r\n                borderRadius: \"4px\"\r\n              }}\r\n            >\r\n              <h3 style={{ color: this.props.palette.primary, fontWeight: \"bold\", margin: \"0.5rem 0 0 1rem\", fontSize: \"1.75rem\" }}>\r\n                Tasks\r\n                <span \r\n                  onClick={() => this.setState({ isSearching: false })} \r\n                  style={{ \r\n                    color: this.props.palette.fillClearButton, \r\n                    float: \"right\", \r\n                    marginRight: \"1rem\", \r\n                    cursor: \"pointer\" \r\n                  }}\r\n                >\r\n                  &times;\r\n                </span>\r\n              </h3>\r\n              <ul style={{ listStyleType: \"none\"}}>\r\n                {this.props.searchTasks.map((task, i) => \r\n                  <li key={i} style={{ margin: \"1rem\" }}>\r\n                    <p style={{ fontWeight: \"600\" }}>{task.title}</p>\r\n                    <p style={{ fontStyle: \"italic\", fontSize: \"0.8rem\"}}>\r\n                      {\r\n                        this.getListName(this.props.lists, task)\r\n                      }\r\n                    </p>\r\n                  </li>)}\r\n              </ul>\r\n            </div>\r\n          : <></>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SideMenuButton extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      menuIsOpen: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      flex: this.props.flex,\r\n      display: \"inline-block\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"2rem\"\r\n    };\r\n  };\r\n\r\n  handleClickEvent = async () => {\r\n    this.state.menuIsOpen\r\n    ? this.props.closeSideMenu()\r\n    : this.props.openSideMenu()\r\n    await this.setState({ menuIsOpen: !this.state.menuIsOpen })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        style={this.getStyle()}\r\n        onClick={ this.handleClickEvent }\r\n      >\r\n        &#9776;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideMenuButton;\r\n","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown colorMenu\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faPalette} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 0 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#cc5252\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n            />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 1 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#2554C7\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 2 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#278427\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 3 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#6e2ac7\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n          <button \r\n            onClick={this.props.setColor.bind(this, this.props.currentList, 4 )}\r\n            style={{ \r\n              display: \"inline-block\",\r\n              backgroundColor: \"#333\",\r\n              width: \"1.5rem\",\r\n              height: \"1.5rem\",\r\n              margin: \"0.25rem\",\r\n              border: \"none\",\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\"\r\n            }} \r\n          />\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortAmountUpAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button className=\"dropbtn\"><FontAwesomeIcon icon={faSortAmountUpAlt} size=\"2x\" /></button>\r\n        <div className=\"dropdown-content\">\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+created\")}>Created ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-created\")}>Created descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+edited\")}>Edited ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-edited\")}>Edited descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+priority\")}>Priority ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-priority\")}>Priority descending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"+deadline\")}>Deadline ascending</button>\r\n          <button onClick={this.props.setOrderTasks.bind(this, \"-deadline\")}>Deadline descending</button>\r\n        </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default SortMenu","import React from \"react\";\r\nimport \"./css/dropdown.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass FilterMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n      <button className=\"dropbtn\"><FontAwesomeIcon icon={faFilter} size=\"2x\" /></button>\r\n      <div className=\"dropdown-content\">\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"\")}>Show all</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"notNull\")}>Show tasks with deadlines</button>\r\n        <button onClick={this.props.setDeadlineFilter.bind(this, \"null\")}>Show tasks without deadlines</button>\r\n      </div>\r\n    </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterMenu","import React, { Component } from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport SideMenuButton from \"./SideMenuButton\";\r\nimport ColorMenu from \"./ColorMenu\";\r\nimport SortMenu from \"./SortMenu\";\r\nimport FilterMenu from \"./FilterMenu\";\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.name !== this.props.name) {\r\n      this.setState({ name: this.props.name })\r\n    }\r\n  }\r\n\r\n  getMainHeaderStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      flex: this.props.flex,\r\n      height: \"4.5rem\",\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"0.9375rem 1.25rem\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header style={this.getMainHeaderStyle()}>\r\n        <SideMenuButton \r\n          flex=\"1\"\r\n          openSideMenu={this.props.openSideMenu}\r\n          closeSideMenu={this.props.closeSideMenu}\r\n        />\r\n        <h1 style={{flex: \"3\", textAlign: \"center\", \r\n                    textOverflow: \"ellipsis\", overflow: \"hidden\"}}>\r\n          {this.state.name}\r\n        </h1>\r\n        <div \r\n          className=\"widget-container\" \r\n          style={{display: \"flex\", flexDirection: \"row\", flex: \"1\", alignItems: \"center\"}}\r\n        >\r\n          <SearchField palette={this.props.palette} handleOnKeyUp={this.props.handleOnKeyUp} searchTasks={this.props.searchTasks} lists={this.props.lists} />\r\n          <ColorMenu setColor={this.props.setColor} currentList={this.props.currentList} palette={this.props.palette} />\r\n          <SortMenu setOrderTasks={this.props.setOrderTasks} />\r\n          <FilterMenu setDeadlineFilter={this.props.setDeadlineFilter} />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { Component } from \"react\";\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEraser, faClock } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass DateMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateDisplay: new Date(this.props.deadline)\r\n    };\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) { \r\n    if (this.props.deadline !== prevProps.deadline) {\r\n      this.setState({ dateDisplay: new Date(this.props.deadline) })\r\n    }\r\n  }\r\n\r\n  dateAssembler = () => {\r\n    if (!isNaN(this.state.dateDisplay.getFullYear()) && this.props.deadline !== null) {\r\n      const year = this.state.dateDisplay.getFullYear()\r\n      const month = this.state.dateDisplay.toLocaleString('default', { month: 'short' });\r\n      const day = this.state.dateDisplay.getDate()\r\n\r\n      return (\r\n        <span style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", width: \"auto\"}}>\r\n          <FontAwesomeIcon icon={faClock} style={{ color: this.props.palette.primary}} />&nbsp;\r\n          <time dateTime={this.state.dateDisplay} style={{ fontStyle: \"italic\"}}>\r\n            {month}&nbsp;{day}, {year}\r\n          </time>&nbsp;\r\n          {this.deleteDeadline()}\r\n        </span>\r\n      )\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  deleteDeadline = () => {\r\n    if (this.props.deadline !== \"0000-00-00\" && this.props.deadline !== null) {\r\n      return <button\r\n          onClick={this.props.setTodoDeadlineNull.bind(this, this.props.todoId)}\r\n          style={this.props.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.props.isDateEditing ?\r\n        <div style={{marginTop: \"0.5rem\"}}>\r\n          {this.dateAssembler()}\r\n\r\n        </div>\r\n      : // Else\r\n        <div style={{marginTop: \"0.5rem\", display: \"flex\", alignItems: \"center\"}}>\r\n          <SingleDatePicker\r\n            date={this.state.date} // momentPropTypes.momentObj or null\r\n            onDateChange={date => this.props.stopDateEditing(date)} // PropTypes.func.isRequired\r\n            focused={this.state.focused} // PropTypes.bool\r\n            onFocusChange={({ focused }) => this.setState({ focused })} // PropTypes.func.isRequired\r\n            id={`date-picker-${this.props.todoId}`} // PropTypes.string.isRequired\r\n            small={true}\r\n            hideKeyboardShortcutsPanel={true}\r\n            withPortal={true}\r\n            firstDayOfWeek={1}\r\n          />\r\n          <span \r\n            onClick={e => this.props.stopDateEditing()} \r\n            style={{padding: \"0.4375rem\", border: \"none\", marginLeft: \"0.25rem\", color: this.props.palette.fillClearButton, cursor: \"pointer\", fontSize: \"1.5rem\", position: \"relative\", bottom: \"0.25rem\"}}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateMenu;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faEraser, \r\n  faEdit, \r\n  faCalendarAlt, \r\n  faWeightHanging \r\n  } from '@fortawesome/free-solid-svg-icons'\r\nimport DateMenu from \"./DateMenu\"\r\nimport TextInputField from \"./TextInputField\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport '../react-confirm-alert.css';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      btnStyle: { display: \"none\" },\r\n      checked: false,\r\n      isEditing: false,\r\n      isDateEditing: false,\r\n      tempPriority: 3,\r\n      sliderColor: this.props.palette.primary,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.palette.primary !== prevProps.palette.primary) {\r\n      this.setState({ sliderColor: this.props.palette.primary })\r\n    }\r\n  }\r\n\r\n  getItemStyle = () => {\r\n    return {\r\n      padding: \"0.9375rem 1.25rem\",\r\n      marginBottom: \"0.5rem\",\r\n      textAlign: \"left\",\r\n      color: this.props.palette.fillTextColor,\r\n      fontWeight: \"600\",\r\n      backgroundColor: this.props.palette.fillTask,\r\n      whiteSpace: \"pre-wrap\",\r\n    };\r\n  };\r\n\r\n  getButtonStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0.125rem\",\r\n      color: this.props.palette.fillTextColor,\r\n      verticalAlign: \"0.05rem\",\r\n      display: this.state.btnStyle.display,\r\n    };\r\n  };\r\n\r\n  finishEditing = () => {\r\n    this.setState({ isEditing: false })\r\n  }\r\n\r\n  stopDateEditing = (newDeadline) => {\r\n    this.setState({ isDateEditing: false})\r\n    \r\n    if (newDeadline !== undefined) {\r\n      this.props.setTodoDeadline(this.props.todo.id, newDeadline)\r\n    }\r\n  }\r\n\r\n  startDateEditing = () => {\r\n    this.setState({ isDateEditing: true })\r\n  }\r\n\r\n  handleEditEvent = () => {\r\n    this.setState({ isEditing: true })\r\n  }\r\n\r\n  handleValueChange = async tempPriority => {\r\n    await this.setState({ tempPriority })\r\n  }\r\n\r\n  // Stop title from overflowing the confirmAlert for the priority slider.\r\n  getDialogTitle = title => {\r\n    if (title.length > 20) {\r\n      title = title.substring(0, 18) + \"...\";\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  // Create a confirmation alert with the message being replaced by rc-slider.\r\n  // Set button sets the new todo priority by reading from the elements due to\r\n  // react-confirm-alert and rc-slider having issues with each other.\r\n  setPriorityDialog = () => {\r\n    confirmAlert({\r\n      title: `Give \"${this.getDialogTitle(this.props.todo.title)}\" a priority.`,\r\n      // Yes, this gives a console error because the message isn't a string\r\n      // No, we can't fix it.\r\n      message: <Slider \r\n                  min={1} \r\n                  max={5} \r\n                  defaultValue={this.props.todo.priority} \r\n                  marks={{ 1: \"Low\", 2: \"\", 3: \"Medium\", 4: \"\", 5: \"High\" }}\r\n                  onChange={this.handleValueChange}\r\n                  handleStyle={{border: `solid 0.125rem ${this.state.sliderColor}`}}\r\n                  trackStyle={{backgroundColor: this.state.sliderColor}}\r\n                  activeDotStyle={{border: `solid 0.125rem ${this.state.sliderColor}`}}\r\n                />,\r\n      buttons: [\r\n        {\r\n          label: \"Set\",\r\n          onClick: () => this.props.setTodoPriority(\r\n            this.props.todo.id, \r\n            // confirmAlert won't play nice with rc-slider \r\n            // so we have to use this abomination.\r\n            document.getElementsByClassName(\"rc-slider-handle\")[0].getAttribute(\"aria-valuenow\"))\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          onClick: () => console.log(\"Priority change canceled.\")\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      // If state property isEditing is false...\r\n      !this.state.isEditing ?\r\n      // Render normal to do task\r\n      <div\r\n        onMouseEnter={(e) => {\r\n          this.setState({ btnStyle: { display: \"inline-block\" } });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          this.setState({ btnStyle: { display: \"none\" } });\r\n        }}\r\n        style={this.getItemStyle()}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`checkbox-${id}`}\r\n          className=\"css-checkbox\"\r\n          onChange={this.props.toggleTodo.bind(this, id, !this.props.checked)}\r\n          checked={this.props.checked}\r\n        />\r\n        <label \r\n          htmlFor={`checkbox-${id}`} \r\n          style={\r\n            this.props.checked\r\n            ? { backgroundColor: this.props.palette.primary, border: \"none\", padding: \"0.5625rem\" }\r\n            : { backgroundColor: this.props.palette.primaryBg, borderWidth: \"0.125rem\", borderStyle: \"solid\", borderColor: this.props.palette.primary, padding: \"0.4375rem\" }\r\n          } \r\n        />\r\n        {\" \"}\r\n        <span \r\n          style={{ \r\n            textDecoration: this.props.todo.is_done ? \"line-through\" : \"none\",\r\n            textDecorationSkip: \"spaces\",\r\n            overflowWrap: \"break-word\"\r\n          }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {\" \"}\r\n        <button\r\n          onClick={() => this.handleEditEvent()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.startDateEditing()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faCalendarAlt} />\r\n        </button>\r\n        <button\r\n          onClick={() => this.setPriorityDialog()}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faWeightHanging} />\r\n        </button>\r\n        <button\r\n          onClick={this.props.deleteTodo.bind(this, id, this.props.checked)}\r\n          style={this.getButtonStyle()}\r\n        >\r\n          <FontAwesomeIcon icon={faEraser} />\r\n        </button>\r\n        <DateMenu \r\n          palette={this.props.palette}\r\n          stopDateEditing={this.stopDateEditing}\r\n          todoId={id}\r\n          deadline={this.props.todo.deadline}\r\n          isDateEditing={this.state.isDateEditing}\r\n          getButtonStyle={this.getButtonStyle}\r\n          setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n        />\r\n      </div>\r\n      : // Otherwise...\r\n      <TextInputField \r\n        editId={id}\r\n        placeholder={title}\r\n        editTodo={this.props.editTodo}\r\n        finishEditing={this.finishEditing}\r\n        btnText=\"Edit\" \r\n        bgColorSubmit={this.props.palette.fillEditBg}\r\n        textColorSubmit={this.props.palette.fillEditText}\r\n        height=\"4.0625rem\"\r\n        paddingInput=\"0.625rem\"\r\n        paddingSubmit=\"0.625rem\"\r\n        marginInput=\"0.9375rem 1.25rem\"\r\n        marginSubmit=\"0.9375rem 0\"\r\n        borderBottom=\"0.0625rem solid #999\"\r\n        showButton={true}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Caret extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      up: false,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.up !== prevProps.up) {\r\n      this.setState({ up: this.props.up });\r\n    }\r\n  }\r\n\r\n  getUpCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"0.5rem\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: \"transparent\",\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: this.props.palette.fillHeaderColor,\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"0.25rem\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n\r\n  getDownCaretStyle = () => {\r\n    return {\r\n      display: \"inline-block\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderWidth: \"0.5rem\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor: this.props.palette.fillHeaderColor,\r\n      borderRightColor: \"transparent\",\r\n      borderBottomColor: \"transparent\",\r\n      borderLeftColor: \"transparent\",\r\n      position: \"relative\",\r\n      top: \"0.75rem\",\r\n      cursor: \"pointer\",\r\n      float: \"right\",\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <span \r\n        onClick={this.props.toggleDisplay.bind(this, this.props.id)}\r\n        style={this.state.up ? this.getUpCaretStyle() : this.getDownCaretStyle()}\r\n      >\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Caret;\r\n","import React, { Component } from \"react\";\r\nimport Caret from \"./Caret\";\r\n\r\n\r\nclass Subheader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n    };\r\n  }\r\n\r\n  getH2Style = () => {\r\n    return {\r\n      color: this.props.palette.fillHeaderColor,\r\n      backgroundColor: this.props.palette.primary,\r\n      padding: \"0.9375rem 1.25rem 0.9375rem 1.25rem\",\r\n      textAlign: \"left\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <h2 style={this.getH2Style()}>\r\n        {this.state.name}\r\n        <Caret \r\n          id={this.props.id}\r\n          toggleDisplay={this.props.toggleDisplay}  \r\n          up={this.props.up}\r\n          palette={this.props.palette}\r\n        />\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subheader;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport Subheader from \"./Subheader\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n// Each css file is identical apart from color settings and .colorSet elements.\r\n// When colorSet className gets updated the file of that value takes over.\r\nimport \"./css/pagination0.css\";\r\nimport \"./css/pagination1.css\";\r\nimport \"./css/pagination2.css\";\r\nimport \"./css/pagination3.css\";\r\nimport \"./css/pagination4.css\";\r\n\r\nclass TodoContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const map = new Map();\r\n    map.set(1, [\"100%\", false])\r\n    map.set(2, [\"100%\", false])\r\n\r\n    this.state = {\r\n      todos: [],\r\n      display: map,\r\n      notDoneCurrentPage: 0,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.display !== prevState.display) {\r\n      this.getWrapperStyle(\"wrapper-1\")\r\n      this.getWrapperStyle(\"wrapper-2\")\r\n    }\r\n\r\n    // If list is changed reset pagination.\r\n    if (this.props.currentList !== prevProps.currentList) {\r\n      this.setState({ notDoneCurrentPage: 0 })\r\n      this.setState({ doneCurrentPage: 0 })\r\n      this.props.setOffset(true, 0)\r\n      this.props.setOffset(false, 0)\r\n      this.props.setCurrentPage(true, this.state.doneCurrentPage)\r\n      this.props.setCurrentPage(false, this.state.notDoneCurrentPage)\r\n    }\r\n\r\n    // Check if pagination is on an empty page, change to previous page if true.\r\n    this.ifEmptyPage()\r\n    if (prevProps.donePaginationOffset !== this.props.getPaginationOffset(true)) {\r\n      this.props.getTasks(true)\r\n    }\r\n    if (prevProps.notDonePaginationOffset !== this.props.getPaginationOffset(false)) {\r\n      this.props.getTasks(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check both tasks lists if the current page is larger than pageCount.\r\n   * If true move to last page and update the offset accordingly.\r\n   */ \r\n  ifEmptyPage = async () => {\r\n    if (this.state.notDoneCurrentPage >= this.props.notDonePageCount && this.state.notDoneCurrentPage !== 0) {\r\n\r\n      let offset = (this.props.notDonePageCount) * this.props.getPaginationLimit(false);\r\n      this.props.setOffset(false, offset);\r\n\r\n      this.setState({ notDoneCurrentPage: this.props.notDonePageCount - 1 })\r\n      this.props.setCurrentPage(false, this.state.notDoneCurrentPage)\r\n    }\r\n\r\n    if (this.state.doneCurrentPage >= this.props.donePageCount && this.state.doneCurrentPage !== 0) {\r\n\r\n      let offset = (this.props.donePageCount) * this.props.getPaginationLimit(true);\r\n      this.props.setOffset(true, offset);\r\n      console.log(offset)\r\n\r\n      this.setState({ doneCurrentPage: this.props.donePageCount - 1 })\r\n      this.props.setCurrentPage(true, this.state.doneCurrentPage)\r\n    }\r\n  }\r\n\r\n  getFlexContainerStyle = () => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-evenly\",\r\n      flex: this.props.flex,\r\n      minHeight: \"0\"\r\n    }\r\n  }\r\n\r\n  getWrapperStyle = (wrapperId) => {    \r\n    const e = document.getElementById(wrapperId);\r\n    const id = wrapperId.slice(-1, wrapperId.length); \r\n    const d = this.state.display.get(Number(id))[0];\r\n    e.style.height = d;\r\n  }\r\n\r\n  toggleDisplay = (subheaderId) => {\r\n    const m = new Map(this.state.display)\r\n    const id = subheaderId.slice(-1, subheaderId.length);\r\n    // d === displayed height which is either 0px or 100% of parent container\r\n    const d = m.get(Number(id))[0];\r\n    // b === boolean value for caret: up (true) or down (false)\r\n    const b = m.get(Number(id))[1];\r\n    \r\n    m.set(Number(id), d === \"100%\" && b === false ? [0, !b] : [\"100%\", !b]);\r\n\r\n    this.setState({ display: m })\r\n  }\r\n\r\n  // take selected page and calculate offset based on pagination limit and page number.\r\n  // Then update current page and reload tasks.\r\n  handleNotDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(false);\r\n\r\n    this.props.setOffset(false, offset);\r\n    this.props.setCurrentPage(false, selectedPage);\r\n    this.setState({\r\n        notDoneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(false)\r\n    });\r\n\r\n  };\r\n\r\n  handleDonePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.props.getPaginationLimit(true);\r\n\r\n    this.props.setOffset(true, offset);\r\n    this.props.setCurrentPage(true, selectedPage)\r\n    this.setState({\r\n        doneCurrentPage: selectedPage,\r\n    }, () => {\r\n        this.props.getTasks(true)\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getFlexContainerStyle()}>\r\n        {/* Subheader and caret for unfinished tasks */}\r\n        <div style={{ width: \"50%\", height: \"80%\", padding: \"1.5rem\", margin: \"1.5rem\" }}>\r\n          <Subheader  \r\n            id={\"sub-1\"}\r\n            name=\"To Do\"\r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(1)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-1\" style={{ height: \"100%\", transition: \"height 1s\", overflowY: \"auto\" }}>\r\n            {/* Iterate through and render unfinished tasks */}\r\n            {this.props.todos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id} \r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Set classname according to current customization settings for CSS */}\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n            {/* If more than 1 page exists render pagination */}\r\n            {this.props.notDonePageCount > 1\r\n              ? <ReactPaginate\r\n                  previousLabel={\"prev\"}\r\n                  nextLabel={\"next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={this.props.notDonePageCount}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={this.handleNotDonePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                  forcePage={this.state.notDoneCurrentPage}\r\n                />\r\n              : <p>{\"\"}</p>\r\n            }\r\n          </div>\r\n        </div>\r\n        {/* Subheader and caret for finished tasks */}\r\n        <div style={{ width: \"50%\", height: \"80%\", padding: \"1.5rem\", margin: \"1.5rem\" }}>\r\n          <Subheader  \r\n            id=\"sub-2\"\r\n            name=\"Done\" \r\n            toggleDisplay={this.toggleDisplay}\r\n            up={this.state.display.get(2)[1]}\r\n            palette={this.props.palette}\r\n          />\r\n          <div id=\"wrapper-2\" style={{ height: \"100%\", transition: \"height 1s\", overflowY: \"auto\" }}>\r\n            {/* Iterate through and render finished tasks */}\r\n            {this.props.doneTodos.map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  toggleTodo={this.props.toggleTodo}\r\n                  setTodoPriority={this.props.setTodoPriority}\r\n                  setTodoDeadline={this.props.setTodoDeadline}\r\n                  editTodo={this.props.editTodo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  checked={todo.is_done}\r\n                  setTodoDeadlineNull={this.props.setTodoDeadlineNull}\r\n                  palette={this.props.palette}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Set classname according to current customization settings for CSS */}\r\n          <div className={`colorSet${this.props.currentColor}`}>\r\n          {/* If more than 1 page exists render pagination */}\r\n          {this.props.donePageCount > 1\r\n            ? <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={this.props.donePageCount}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={this.handleDonePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                forcePage={this.state.doneCurrentPage}\r\n              />\r\n            : <p>{\"\"}</p>\r\n          }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoContainer;\r\n","import React, { Component } from \"react\";\r\nimport ButtonContainer from \"../ButtonContainer\";\r\nimport TextInputField from \"./TextInputField\";\r\n\r\nclass Dock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMobileView: false,\r\n    };\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      backgroundColor: this.props.palette.primary,\r\n      lineHeight: \"2.1875rem\",\r\n      height: \"4.0625rem\",\r\n      flex: this.props.flex,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        {this.state.isMobileView ? (\r\n          <ButtonContainer />\r\n        ) : (\r\n          <TextInputField \r\n            addTodo={this.props.addTodo} \r\n            currentList={this.props.currentList}\r\n            btnText=\"Add\"\r\n            paddingInput=\"0.625rem\"\r\n            paddingSubmit=\"0.625rem\"\r\n            marginInput=\"0.9375rem 0 0.9375rem 1.25rem\"\r\n            marginSubmit=\"0.9375rem 1.25rem 0.9375rem 0\"\r\n            bgColorSubmit={this.props.palette.fillButton}\r\n            textColorSubmit={this.props.palette.fillTextColor}\r\n            bgColorInput={this.props.palette.fillInputColor}\r\n            textColorInput={this.props.palette.fillTextColor}\r\n            placeholder=\"Any homework to do?\"\r\n            borderRadiusInput=\"0.75rem 0 0 0.75rem\"\r\n            borderRadiusSubmit=\"0 0.75rem 0.75rem 0\"\r\n            borderBottom=\"none\"\r\n            flexInput=\"10\"\r\n            flexBtn=\"1\"\r\n            showButton={true}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dock;\r\n","var colors = {\r\n  // RED: default\r\n  red: {\r\n    primary: \"#cc5252\",\r\n    secondary: \"#962029\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#cc5252\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#cc5252\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#cc5252\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // BLUE\r\n  blue: {\r\n    primary: \"#2554C7\",\r\n    secondary: \"#193a8b\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#2554C7\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#2554C7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#2554C7\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // GREEN\r\n  green: {\r\n    primary: \"#278427\",\r\n    secondary: \"#1a581a\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#278427\",\r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#278427\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillClearButton: \"#278427\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // VIOLET\r\n  violet: {\r\n    primary: \"#6e2ac7\",\r\n    secondary: \"#461B7E\",\r\n    bgPrimary: \"white\",\r\n    bgSecondary: \"gainsboro\",\r\n    fillList: \"white\",\r\n    fillActiveList: \"#6e2ac7\", \r\n    fillTask: \"#f8f8f8\",\r\n    fillEditBg: \"#6e2ac7\",\r\n    fillEditText: \"white\",\r\n    fillButton: \"gainsboro\",\r\n    fillHeaderColor: \"white\",\r\n    fillTextColor: \"black\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"white\"\r\n  },\r\n  // DARK\r\n  dark: {\r\n    primary: \"#333\",\r\n    secondary: \"#3a3a3a\",\r\n    bgPrimary: \"#1E1E1E\",\r\n    bgSecondary: \"#232323\",\r\n    fillList: \"#1e2021\",\r\n    fillActiveList: \"#444\",\r\n    fillTask: \"#444\",\r\n    fillEditBg: \"#444\",\r\n    fillEditText: \"whitesmoke\",\r\n    fillButton: \"#444\",\r\n    fillClearButton: \"whitesmoke\",\r\n    fillHeaderColor: \"whitesmoke\",\r\n    fillTextColor: \"whitesmoke\",\r\n    fillActiveTextColor: \"white\",\r\n    fillInputColor: \"#1e2021\"\r\n  },\r\n}\r\n\r\nexport default colors;","import React, { Component } from \"react\";\r\nimport SideMenu from \"./components/list/SideMenu\";\r\nimport MainHeader from \"./components/todo/MainHeader\";\r\nimport TodoContainer from \"./components/todo/TodoContainer\";\r\nimport Dock from \"./components/todo/Dock\";\r\nimport axios from \"axios\";\r\nimport colors from \"./colors\";\r\n\r\nconst url = \"https://tamk-4a00ez62-3001-group08.herokuapp.com/api/\";\r\nconst apikey = process.env.REACT_APP_BACKEND_APIKEY;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      searchTasks: null,\r\n      deadlineFilter: '',\r\n      orderTasks: '+created',\r\n      currentList: 1,\r\n      currentColor: 0,\r\n      todos: [],\r\n      todosCount: 1,\r\n      doneTodos: [],\r\n      doneTodosCount: 1,\r\n      lists: [],\r\n      refresh: false,\r\n      sideMenuIsOpen: false,\r\n      notDonePaginationLimit: 10,\r\n      notDonePaginationOffset: 0,\r\n      notDonePageCount: 1,\r\n      notDoneCurrentPage: 0,\r\n      donePaginationLimit: 10,\r\n      donePaginationOffset: 0,\r\n      donePageCount: 1,\r\n      doneCurrentPage: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTasks(true);\r\n    this.getTasks(false);\r\n    this.getLists();\r\n    this.getTasksCount(true);\r\n    this.getTasksCount(false);\r\n    this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n    this.getPageCount(true, this.state.notDonePaginationLimit, this.state.todosCount)\r\n    this.getListColor(this.state.currentList)\r\n  }\r\n\r\n  /**\r\n   * call backend with APIKey and any required filters and sorters included. \r\n   * Pagination included at the end of the string.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for getting finished and unfinished tasks.\r\n   */\r\n  getTasks = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&sort=${this.state.orderTasks}&limit=${this.getPaginationLimit(isDone)}&offset=${this.getPaginationOffset(isDone)}`)\r\n    .then((res) => isDone ? this.setState({ doneTodos: res.data }) : this.setState({ todos: res.data }))\r\n    .then(this.getTasksCount(isDone))\r\n    .then(this.getListColor(this.state.currentList));\r\n  }\r\n\r\n  /**\r\n   * Used for checking the color of the list when the page is first loaded\r\n   * and when switching to a new list/refreshing tasks.\r\n   * \r\n   * @param {int} listId id of the list whose color is being requested.\r\n   */\r\n  getListColor = (listId) => {\r\n    axios.get(`${url}lists/${listId}?apikey=${apikey}`).then((res) => {\r\n      this.setState({ currentColor: res.data[0].color });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a count of tasks for pagination from backend to save on the amount of data\r\n   * that has to be downloaded.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used for counting finished and unfinished tasks.\r\n   */\r\n  getTasksCount = (isDone) => {\r\n    axios.get(`${url}tasks/?apikey=${apikey}&list_id=${this.state.currentList}&is_done=${isDone}${this.getDeadlineFilter()}&count=true`)\r\n    .then((res) => isDone ? this.setState({ doneTodosCount: res.data[0].count }) : this.setState({ todosCount: res.data[0].count }))\r\n    .then(() => {\r\n      if (isDone) {\r\n        this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount)\r\n      } else {\r\n        this.getPageCount(false, this.state.notDonePaginationLimit, this.state.todosCount)\r\n      }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Calculate the amount of pages by dividing the amount of tasks\r\n   * with the limit per page and rounding up.\r\n   * \r\n   * @param {boolean} isDone so the same function can be used with finished and unfinished tasks.\r\n   * @param {int} limit the amount of tasks that can be loaded at the same time.\r\n   * @param {int} count The amount of todos.\r\n   */\r\n  getPageCount = (isDone, limit, count)  => {\r\n    if (isDone) {\r\n      this.setState({ donePageCount: Math.ceil(count / limit) })\r\n    } else {\r\n      this.setState({ notDonePageCount: Math.ceil(count / limit) })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get every list from the backend, apikey included.\r\n   */\r\n  getLists = () => {\r\n    axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n      this.setState({ lists: res.data });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * update database boolean value of given id to the given value.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {boolean} checked the new value of the todo.\r\n   */\r\n  toggleTodo = (id, checked) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        is_done: checked,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * update priority value of given id to priorityValue.\r\n   * The number is treated to be anywhere between 1 and 5.\r\n   * 5 means highest priority while 1 means the lowest.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {int} priorityValue the new priority value being assigned.\r\n   */\r\n  setTodoPriority = (id, priorityValue) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        priority: priorityValue,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n    \r\n  /**\r\n   * This method is used for updating list names.\r\n   * \r\n   * @param {int} id  id of the list being modified.\r\n   * @param {string} name the new value of the list name being assigned.\r\n   */\r\n  editList = (id, name) => {\r\n    axios\r\n      .put(`${url}lists/${id}?apikey=${apikey}`, { name })\r\n      .then(() => this.getLists());\r\n  };\r\n\r\n  /**\r\n   * This method is used for updating task texts.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {string} title the new value of the task text being assigned.\r\n   */\r\n  editTodo = (id, title) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, { title })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline date of the task.\r\n   * Only the year, month and day are saved following the ISO 8601 standard.\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   * @param {date} deadlineDate the value of the deadline date being assigned.\r\n   */\r\n  setTodoDeadline = (id, deadlineDate) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `${deadlineDate._d.getFullYear()}-${deadlineDate._d.getMonth() + 1}-${deadlineDate._d.getDate()}`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method is used for setting the deadline as null.\r\n   * In the database this appears as \"0000-00-00\".\r\n   * \r\n   * @param {int} id id of the task being modified.\r\n   */\r\n  setTodoDeadlineNull = (id) => {\r\n    axios\r\n      .put(`${url}tasks/${id}?apikey=${apikey}`, {\r\n        deadline: `NULL`,\r\n      })\r\n      .then(() => {\r\n        this.getTasks(true)\r\n        this.getTasks(false)\r\n      });\r\n  };\r\n\r\n  /**\r\n   * This method deletes the task of given Id from local- and serverside data.\r\n   * Also refreshes taskCount and PageCount after that for pagination purposes.\r\n   * \r\n   * @param {int} id id of the task being deleted.\r\n   * @param {boolean} checked used to determine where to delete the local data.\r\n   */\r\n  deleteTodo = (id, checked) => {\r\n    axios.delete(`${url}tasks/${id}?apikey=${apikey}`).then(() => {\r\n      if (checked) {\r\n        this.setState({ doneTodos: [...this.state.doneTodos.filter((todo) => todo.id !== id)] });\r\n        this.getTasksCount(true);\r\n        this.getPageCount(true, this.state.donePaginationLimit, this.state.doneTodosCount);\r\n      } else {\r\n        this.setState({ todos: [...this.state.todos.filter((todo) => todo.id !== id)] });\r\n        this.getTasksCount(false);\r\n        this.getPageCount(false, this.state.notDonePaginationLimit, this.state.todosCount);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * delete the list of given id from local- and serverside data.\r\n   * \r\n   * @param {int} id id of the list being deleted.\r\n   */\r\n  deleteList = (id) => {\r\n    axios.delete(`${url}lists/${id}?apikey=${apikey}`).then(() => {\r\n      this.setState({\r\n        lists: [...this.state.lists.filter((list) => list.id !== id)],\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * add a new task and include list Id for the database to use as a foreign key\r\n   * and the text content of the task, rest of the data is assigned as defaults.\r\n   * \r\n   * @param {int} listId id of the list the list the task will be included in.\r\n   * @param {string} title the text content of the new task.\r\n   */\r\n  addTodo = (listId, title) => {\r\n    axios\r\n      .post(`${url}tasks/?apikey=${apikey}`, {\r\n        listId,\r\n        title,\r\n      })\r\n      .then(() => this.getTasks(false), this.getTasks(true));\r\n  };\r\n\r\n  /**\r\n   * Create a new list, only name is required since everything else is assigned\r\n   * to its default values.\r\n   * \r\n   * @param {string} name The name of the new list.\r\n   */\r\n  addList = (name) => {\r\n    axios\r\n      .post(`${url}lists/?apikey=${apikey}`, {\r\n        name,\r\n      })\r\n      .then(() => {\r\n        axios.get(`${url}lists/?apikey=${apikey}`).then((res) => {\r\n          this.setState({ lists: res.data });\r\n          this.setList(res.data[res.data.length-1].id)\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Update currentList value and load new tasks with the value as a filter.\r\n   * \r\n   * @param {int} listId id of the list that'll be used in the getTasks filters.\r\n   */\r\n  setList = async (listId) => {\r\n    await this.setState({ currentList: listId });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * assign sorter(s) and refresh current tasks with the new sorter.\r\n   * \r\n   * @param {string} order includes sorting values separated by a \",\" symbol.\r\n   */\r\n  setOrderTasks = async (order) => {\r\n    await this.setState({ orderTasks: order });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * Iterate through current array of lists and find where Id matches currentList.\r\n   * Then return the name of that list to be used in the MainHeader.js\r\n   */\r\n  getListNameById = () => {\r\n    for (const list of this.state.lists) {\r\n      if (list['id'] === this.state.currentList) {\r\n        return list['name']\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set deadline filter to be used with getTasks()\r\n   * Then refresh the tasks to apply the filter.\r\n   * \r\n   * Only used in FilterMenu.js and chooses between showing all tasks or\r\n   * only those either with or without a deadline date.\r\n   * \r\n   * @param {string} dlFilter is sent either empty, \"null\" or \"notNull\" String.\r\n   */\r\n  setDeadlineFilter = async (dlFilter) => {\r\n    await this.setState({ deadlineFilter: dlFilter });\r\n    this.getTasks(false);\r\n    this.getTasks(true);\r\n  };\r\n\r\n  /**\r\n   * used to either add the deadline filter to getTasks\r\n   * or if the deadlineFilter String is empty return an empty string\r\n   * as to not mess with the rest of the get request.\r\n   */\r\n  getDeadlineFilter = () => {\r\n    let dl = `&deadline=${this.state.deadlineFilter}`;\r\n    if (dl === '&deadline=') {\r\n      dl = '';\r\n    }\r\n    return dl;\r\n  };\r\n\r\n  // Used for animated opening and closing of the list menu.\r\n  openSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"20%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  closeSideMenu = () => {\r\n    const el = document.getElementById('sideMenu')\r\n    el.style.width = \"0%\"\r\n    el.style.transition = \"width 0.5s\"\r\n  };\r\n\r\n  /** \r\n   * Getters and setters for client-side pagination variables.\r\n   * @param {boolean} done is used on each to switch between finished and unfinished tasks.\r\n   */\r\n  getPaginationLimit = done => {\r\n    if (done) {\r\n      return this.state.donePaginationLimit;\r\n    } else {\r\n      return this.state.notDonePaginationLimit;\r\n    }\r\n  }\r\n\r\n  getPaginationOffset = done => {\r\n    if (done) {\r\n      return this.state.donePaginationOffset;\r\n    } else {\r\n      return this.state.notDonePaginationOffset;\r\n    }\r\n  }\r\n\r\n  setOffset = (done, newOffset) => {\r\n    if (done) {\r\n      this.setState({ donePaginationOffset: newOffset })\r\n    } else {\r\n      this.setState({ notDonePaginationOffset: newOffset })\r\n    }\r\n  }\r\n\r\n  setCurrentPage = (done, newPage) => {\r\n    if (done) {\r\n      this.setState({ doneCurrentPage: newPage })\r\n    } else {\r\n      this.setState({ notDoneCurrentPage: newPage })\r\n    }\r\n  }\r\n\r\n  // Color getters and setters.\r\n  setColor = async (id, color) => {\r\n    await axios.put(`${url}lists/${id}?apikey=${apikey}`, { color })\r\n    await this.getLists()\r\n    await this.setState({ currentColor: color })\r\n  }\r\n\r\n  getCurrentColor = () => {\r\n    const colorCode = this.state.currentColor\r\n    const colorCodes = {red: 0, blue: 1, green: 2, violet: 3, dark: 4}\r\n\r\n    for (const key in colorCodes) {\r\n      if (colorCodes[key] === colorCode) return key;\r\n    }\r\n  }\r\n\r\n  handleOnKeyUp = async (title) => {\r\n    if (title === \"\") {\r\n      return\r\n    }\r\n\r\n    const results = await axios.get(`${url}tasks/?apikey=${apikey}&search_title=${title}`)\r\n    const tasks = results.data\r\n    await this.setState({ searchTasks: tasks })\r\n  }\r\n\r\n  render() {\r\n    const color = this.getCurrentColor();\r\n    const palette = colors[color];\r\n    document.body.style.backgroundColor = palette.bgPrimary;\r\n\r\n    return (\r\n      <div className=\"app-container\" style={{\r\n          display: \"flex\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        {/* Includes lists and the input for adding new lists. */}\r\n        <SideMenu\r\n          lists={this.state.lists}\r\n          deleteList={this.deleteList}\r\n          setList={this.setList}\r\n          addList={this.addList}\r\n          editList={this.editList}\r\n          currentList={this.state.currentList}\r\n          palette={palette}\r\n          \r\n        />\r\n        <div className={\"main-container\"} style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flex: \"auto\",\r\n            backgroundColor: palette.bgPrimary,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {/* Includes the title and dropdown menus for customization.*/}\r\n          <MainHeader \r\n            flex=\"initial\"\r\n            palette={palette}\r\n            currentList={this.state.currentList}\r\n            searchTasks={this.state.searchTasks}\r\n            lists={this.state.lists}\r\n            openSideMenu={this.openSideMenu}\r\n            closeSideMenu={this.closeSideMenu}\r\n            name={this.getListNameById()}\r\n            handleOnKeyUp={this.handleOnKeyUp}\r\n            setColor={this.setColor}\r\n            setOrderTasks={this.setOrderTasks}\r\n            setDeadlineFilter={this.setDeadlineFilter}\r\n          />\r\n\r\n          {/* Includes tasks, all of their associated buttons \r\n              as well as pagination, subheaders and \r\n              carets for collapsing the content. */}\r\n          <TodoContainer\r\n            todos={this.state.todos}\r\n            doneTodos={this.state.doneTodos}\r\n            toggleTodo={this.toggleTodo}\r\n            setTodoPriority={this.setTodoPriority}\r\n            setTodoDeadline={this.setTodoDeadline}\r\n            editTodo={this.editTodo}\r\n            deleteTodo={this.deleteTodo}\r\n            setTodoDeadlineNull={this.setTodoDeadlineNull}\r\n            flex=\"auto\"\r\n            palette={palette}\r\n            todosCount={this.state.todosCount}\r\n            doneTodosCount={this.state.doneTodosCount}\r\n            getPaginationOffset={this.getPaginationOffset}\r\n            getPaginationLimit={this.getPaginationLimit}\r\n            setOffset={this.setOffset}\r\n            getTasks={this.getTasks}\r\n            notDonePageCount={this.state.notDonePageCount}\r\n            donePageCount={this.state.donePageCount}\r\n            setCurrentPage={this.setCurrentPage}\r\n            notDoneCurrentPage={this.state.notDoneCurrentPage}\r\n            doneCurrentPage={this.state.doneCurrentPage}\r\n            currentList={this.state.currentList}\r\n            currentColor={this.state.currentColor}\r\n            notDonePaginationOffset={this.state.notDonePaginationOffset}\r\n            donePaginationOffset={this.state.donePaginationOffset}\r\n          />\r\n          {/* Include inputs for creating new tasks.*/}\r\n          <Dock \r\n            addTodo={this.addTodo} \r\n            currentList={this.state.currentList}\r\n            flex=\"initial\"\r\n            palette={palette}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}